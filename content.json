{"meta":{"title":"明明的博客","subtitle":"学与做","description":"学习 实践 思考 记录","author":"MINGG","url":"http://mingg2333.top","root":"/"},"posts":[{"tags":[],"title":"LaTeX","date":"2024/11/26","text":"title: LaTeXdate: 2022-10-17 23:11:01tags: - LaTeX grammar\\section{Introduction}\\subsection{Template Styles}\\cite{lousurvey, zhong2021survey}{\\itshape scenario semantic}\\begin{itemize}[leftmargin=5.5mm]\\item xxx.\\end{itemize}\\begin{figure}[ht] \\centering \\includegraphics[width=\\textwidth]{images/cla2.png} \\caption{xxxx.} \\Description{A woman and a girl in white dresses sit in an open car.} \\label{fig:cla2}\\end{figure}\\begin{figure}[htbp]\\centering\\subfigure[pic1.]{ \\begin{minipage}[t]{0.25\\linewidth} \\centering \\includegraphics[width=1in]{images/cla2.png} \\end{minipage}}\\subfigure[pic2.]{ \\begin{minipage}[t]{0.25\\linewidth} \\centering \\includegraphics[width=1in]{images/cla117.png} \\end{minipage}}\\caption{Similar scenarios in an image, like (a). In each scenario, NPC1 starts from the left top, NPC2 starts from the left bottom, and ego starts from the right bottom.}\\Description{My classes.}\\label{fig:cla2}\\end{figure}Fig. \\ref{fig:cla2}\\label{tab:freq}\\ref{tab:freq}\\url{https://goo.gl/VLCRBB}\\verb|acmart|\\begin{verbatim} \\documentclass[STYLE]{acmart}\\end{verbatim}\\begin{description} \\item[\\texttt{sidebar}:] Place formatted text in the margin.\\end{description}\\texttt{acmsmall}{\\bfseries Your document will be returned to you for revision if modifications are discovered.}\\textbf{math}$\\mathbb{Z} \\setminus \\{ 0 \\}$\\makecell[c]{Semi-Supervised \\\\ Learning}% for special characters\\&amp;\\O{\\char'134}$\\pi$$\\Psi$$\\alpha$$\\omega$\\lim_{n\\rightarrow \\infty}x=0\\sum_{i=0}^{\\infty}x_i=\\int_{0}^{\\pi+2} f% “”`` ''% ...\\texttt{$\\,\\ldots$} Title Capitalization Tool - Capitalize My Title - Title Case Tool Computing Classification System document class includes package Latex 数学符号 汇总 - ZingLix Blog Format% 1. at first, the preamble\\documentclass[sigconf]{acmart}\\usepackage{enumitem}\\usepackage{subfigure}%% \\BibTeX command to typeset BibTeX logo in the docs\\AtBeginDocument{% \\providecommand\\BibTeX{{% Bib\\TeX}}}% 2. start of the document\\begin{document}%% The \"title\" command has an optional parameter,%% allowing the author to define a \"short title\" to be used in page headers.\\title{xxx}% \\title[short title]{full title}\\author{Ben Trovato}\\authornote{Both authors contributed equally to this research.}\\email{trovato@corporation.com}\\orcid{1234-5678-9012}\\author{G.K.M. Tobin}\\authornotemark[1]\\email{webmaster@marysville-ohio.com}\\affiliation{% \\institution{Institute for Clarity in Documentation} \\streetaddress{P.O. Box 1212} \\city{Dublin} \\state{Ohio} \\country{USA} \\postcode{43017-6221}}\\renewcommand{\\shortauthors}{Trovato et al.}\\begin{abstract}xxx\\end{abstract}\\keywords{datasets, neural networks, gaze detection, text tagging}\\maketitletttt\\end{document}% 3. after last section of main body in document\\begin{acks}\\end{acks}\\balance%% The next two lines define the bibliography style to be used, and%% the bibliography file.\\bibliographystyle{ACM-Reference-Format}\\bibliography{documents/sample-base}%% If your work has an appendix, this is the place to put it.\\appendix% 4. main body in document","permalink":"http://mingg2333.top/2024/11/26/LaTeX/","photos":[]},{"tags":[{"name":"Apollo","slug":"Apollo","permalink":"http://mingg2333.top/tags/Apollo/"},{"name":"simulation","slug":"simulation","permalink":"http://mingg2333.top/tags/simulation/"}],"title":"Co-simulation of Baidu Apollo with Carla","date":"2024/11/26","text":"Modified: 2024-2-4 21:17:51 Co-simulation with Carla. Quick start# Build Apollo dockerbash docker/scripts/dev_start.sh stopbash docker/scripts/dev_start.sh# Introduce bridge scriptscd carla_apollo_bridgedocker cp carla_bridge &lt;apollo_container_name&gt;:/apollo/modules/carla_bridge# Build Apollobash docker/scripts/dev_into.sh./apollo.sh clean./apollo.sh build_gpu# Build bridgecd /apollo/modules/carla_bridgechmod +x install.sh./install.shsource ~/.bashrc# Visual Apollo channelcyber_monitor./scripts/bootstrap.sh stop./scripts/bootstrap.sh# Inject channel message## start simulatorcd carla_apollo_bridgecd carla_scripts./stop_carla.sh./docker_run_carla.sh## start bridgebash docker/scripts/dev_into.shcd /apollo/modules/carla_bridgepython main.py# Launch Apollo modules## perception modulemainboard -d /apollo/modules/localization/dag/dag_streaming_rtk_localization.dagcyber_launch start modules/drivers/tools/image_decompress/launch/image_decompress.launchcyber_launch start /apollo/modules/perception/production/launch/perception_lidar.launch## turn on \"Transform\" (once), \"Routing\", \"Prediction\", \"Planning\", \"control\"## set routeps aux | grep -i apollo Co-simulation with carladebugdebug string For code trace","permalink":"http://mingg2333.top/2024/11/26/Baidu%20Apollo/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"}],"title":"ADS","date":"2022/01/21","text":"Created: 2022-1-6 20:05:09 Modified: 2022-1-21 15:23:02 computer visionvideoattack/safety sim、test Modellane-change: traditional rule-based model: assesses the positions and speeds + decides gap acceptance Reinforcement Learning-based: end-to-end; decision-making part (deep Q-learning) + an optimal lattice planner + a model predictive controller ChauffeurNetChauffeurNet: Learning to Drive by Imitating the Best and Synthesizing the Worst ChauffeurNet: Learning to Drive by Imitating the Best and Synthesizing the Worst | Papers With Code Iftimie/ChauffeurNet (github.com) Apollomap: DAVE-2 (a steering angle model)(refer to DeepXplore: Automated Whitebox Testing of Deep Learning Systems peikexin9/deepxplore: DeepXplore code release (github.com)) Dave-2 (End to end learning for self-driving cars, 2016, 3808 citations, 1+114 code implementations): End to End Learning for Self-Driving Cars | Papers With Code 0bserver07/Nvidia-Autopilot-Keras: Keras Implementation of End to End Learning for Self-Driving Cars by (Baris Kayalibay, Grady Jensen, Patrick van der Smagt) (github.com) GitHub - SullyChen/Autopilot-TensorFlow: A TensorFlow implementation of this Nvidia paper: https://arxiv.org/pdf/1604.07316.pdf with some changes tech-rules/DAVE2-Keras: Implementation of Nvidia’s DAVE2 NN in Keras, with some enhancements (github.com) End-to-End Deep Learning for Self-Driving Cars | NVIDIA Technical Blog (video; also introduce how the simulator works) GitHub - milsun/AI-Driver-CNN-DeepLearning-PyTorch: AI-driving Vehicle Simulation using Machine Learning(CNN) | PyTorch implementation of \"End to End Learning for Self-Driving Cars\" (arXiv:1604.07316) GitHub - nerdimite/behavioral-cloning: Code for Intro to Self Driving Cars Webinar (CellStrat AI Lab) ResearchNotes/implement_behavioral_cloning.md at 9d35c65c107978722ea1e85ed193862a6f389b83 · simonazy/ResearchNotes (github.com) Dave-norminit (Visualizations for understanding the regressed wheel steering angle for self driving cars): jacobgil/keras-steering-angle-visualizations: Visualizations for understanding the regressed wheel steering angle for self driving cars (github.com) Visualizations for regressing wheel steering angles in self driving cars (jacobgil.github.io) Dave-dropout (Behavioral cloning: end-to-end learning for self-driving cars) 1 End-to-end learning for self-driving cars - Alex Staravoitau’s Blog navoshta/behavioral-cloning: Behavioral cloning: end-to-end learning for self-driving cars. (github.com) 2 Behavioural Cloning — End to End Learning for Self-Driving Cars. | by nachiket tanksale | The Startup | Medium naokishibuya/car-behavioral-cloning: Built and trained a convolutional network for end-to-end driving in a simulator using Tensorflow and Keras (github.com) Self_Driving_Car/CarND-Behavioral-Cloning-P3 at master · nachiket273/Self_Driving_Car (github.com) Other steering angle models(refer to DeepTest: Automated Testing of Deep-Neural-Network-driven Autonomous Cars &amp; DeepRoad: GAN-Based Metamorphic Testing and Input Validation Framework for Autonomous Driving Systems) self-driving-car/challenges/challenge-2 at master · udacity/self-driving-car · GitHub (Udacity self-driving car challenge) https://medium.com/udacity/challenge-2-using-deep-learning-to-predict-steering-angles-f42004a36ff3 Teaching a Machine to Steer a Car | by Oliver Cameron | Udacity Inc | Medium (results) refer to Deep Steering: Learning End-to-End Driving Model from Spatial and Temporal Visual Cues The dataset we used is provided by Udacity, which is generated by NVIDIAs DAVE-2 System (refer to Self-Driving Car Steering Angle Prediction Based on Image Recognition) Open Sourcing 223GB of Driving Data | by Oliver Cameron | Udacity Inc | Medium (dataset for challenge) industrysafetyread: https://developer.nvidia.com/blog/training-self-driving-vehicles-challenge-scale/, https://www.rand.org/content/dam/rand/pubs/research_reports/RR1400/RR1478/RAND_RR1478.pdf LGSVL with Apollohttps://www.youtube.com/watch?v=Ucr0aM334_k: about API LGSVL graphical simulator (LG. Lgsvl simulator. [Online]. Available: https://www.lgsvlsimulator.com/) that supports both freeway and urban road structures. api collect data: slow , so use bridge (like apollo)?# Typora CARLAcarla (CARLA: An Open Urban Driving Simulator) data (routes and scenarios as source -&gt; rbg, lidar) ​ route (a sequence of waypoints (and optionally a weather condition)) ​ scenario (a trigger transform (location and orientation) and other actors present in that scenario (optional)) run on colab:https://github.com/carla-simulator/carla/issues/2820 TODO: Return: Inherited from server CarSim physics solver relationship between set_autopilot and TM-Server check C++, server send carla.WorldSnapshot while client sent tick() when to send carla.TextureColor or carla.TextureFloatColor to server","permalink":"http://mingg2333.top/2022/01/21/ADS/","photos":[]},{"tags":[{"name":"experiment","slug":"experiment","permalink":"http://mingg2333.top/tags/experiment/"},{"name":"methodology","slug":"methodology","permalink":"http://mingg2333.top/tags/methodology/"}],"title":"experiment","date":"2022/01/21","text":"Created: 2022-1-21 14:11:53 Modified: 2022-1-21 14:11:53 ▪ 观察▪ 定义: 提出问题▪ 假设▪ 检验：制定计划、实施计划、得出结论▪ 发表▪ 建构","permalink":"http://mingg2333.top/2022/01/21/experiment/","photos":[]},{"tags":[{"name":"Docker","slug":"Docker","permalink":"http://mingg2333.top/tags/Docker/"}],"title":"Docker","date":"2022/01/15","text":"Created: 2022-1-16 01:12:24 Modified: 2022-1-16 01:12:24 quick use# Command used outside container# imagedocker imagesdocker search ubuntudocker pull ubuntu:15.10docker pull training/webappdocker rmi hello-worlddocker tag 860c279d2fec runoob/centos:devdocker commit -m=\"has update\" -a=\"runoob\" e218edb10161 runoob/ubuntu:v2 # ?# containerdocker run -t -i ubuntu:15.10 /bin/bash # run create new container, ubuntu is a 'image name'docker run -itd --name ubuntu-test ubuntu:15.10 /bin/bash # '-d' means running in backgrounddocker run -d -P training/webapp python app.py # random port of host -&gt; port of containerdocker run -d -p 5000:5000 training/webapp python app.py # 5000 -&gt; 5000docker start b750bbbcfd88 # b750bbbcfd88 is a 'container id'docker stop b750bbbcfd88docker restart b750bbbcfd88docker exec -it b750bbbcfd88 /bin/bash # enter container that running in backgrounddocker rm -f b750bbbcfd88docker container prune # clean all that exiteddocker ps -adocker port b750bbbcfd88docker port ubuntu-testdocker logs -f bf08b7f2cd89 # Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)docker top ubuntu-test # PID, ...docker inspect ubuntu-test # detaied config and statesudo gpasswd -a $USER dockernewgrp dockerreboot what it istwo concepts: container, image image: store sth. container: load image refer to: https://www.runoob.com/docker/docker-image-usage.html How to build a imagerefer to https://www.runoob.com/docker/docker-image-usage.html create a Dockerfile in /Documents FROM centos:6.7MAINTAINER Fisher \"fisher@sudops.com\"RUN /bin/echo 'root:123456' |chpasswdRUN useradd runoobRUN /bin/echo 'runoob:123456' |chpasswdRUN /bin/echo -e \"LANG=\\\"en_US.UTF-8\\\"\" &gt;/etc/default/localEXPOSE 22EXPOSE 80CMD /usr/sbin/sshd -D build docker build -t runoob/centos:6.7 /Documents Commitrefer to https://yeasy.gitbook.io/docker_practice/image/commit.","permalink":"http://mingg2333.top/2022/01/15/Docker/","photos":[]},{"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"},{"name":"test case evaluation","slug":"test-case-evaluation","permalink":"http://mingg2333.top/tags/test-case-evaluation/"}],"title":"ML test case evaluation","date":"2022/01/04","text":"Created: 2022-1-4 21:11:13 Modified: 2022-1-4 21:11:13 AV fuzzing: focus on diversity, find bugs (testing), evaluation safety(collision testing), functionality “correctness”(planning&amp;tracking) (traffic rules), mobility, and rider’s comfort traffic violationstraffic offenses can be vehicle-related 导航能够解决“压着导向车道实线变道”还是“应该变道”的问题 semantic actionmotivation e.g. “follow the car in front of you” or “quickly overtake that car on your left” property: a semantic action can have a very long time horizon; small number; semantic action space -(kinematic calculations)&gt; action space formalize: goals &amp; aggressiveness level evaluation: quality function based on a machine learning approach trained on a large variety of road types, instead of learning a Q function over immediate geometric action Responsibility-Sensitive Safety for planning in critical situationsA Lane-Based Coordinate System requirement without usefulness -&gt; keep Safe Distance proper response -&gt; best effort (Proper Response with Extra Evasive Effort) -&gt; excessive response assume: under reasonable Situation a single lane road: cars cannot perform lateral maneuvers, cars never drive backward common sense rule: if someone hits you from behind it is not your fault metrics: Safe longitudinal distance — same direction proper response: rear car’s acceleration, brake according to safe distance a straight road (a general lane geometry): cars cannot perform lateral maneuvers, cars can drive backward common sense: if someone hits you from behind while you are reversing it is your fault metrics: Safe longitudinal distance — opposite directions proper response: both cars’ acceleration, brake according to safe distance a straight road (two routes of the same geometry) metrics: Safe Lateral Distance proper response: both cars’ acceleration, brake according to safe distance common sense: if you can avoid an accident without causing another accident, you must do it multiple different road geometries: roundabouts, junctions, and merge into highways; one route has priority over others, and vehicles riding on it have the right of way; two cars on different routes metrics: Safe Lateral/Longitudinal Distance for Two Routes of Different Geometry (abstract? position relationship?) special scenario at an intersections with traffic lights, like right of way is given, not taken no route geometry, e.g. the parking lot (not consideration) Pedestrians: zebra crossing or residential street / residential road (unstructured roads?) Occlusion common sense: When a human driver claims “but I couldn’t see him”, a counter argument is often “well, you should’ve been more careful”, like limit v or proper Behaviour(always adhering to proper response) stress-testing techniquesfitness functions in the area of testing autonomous systems [25] ASTAdaptive Stress Testing: Finding Likely Failure Events with Reinforcement Learning Airborne Collision Avoidance System (ACAS X, TCAS) scenarios of near mid-air collisions (NMACs) (2 distinct types in 200 hours) formulations: simulator state (stacked system and environment states) is fully observable or partially observable, Markov process with discrete time and continuous state, sequential decision process -&gt; MDP or MCTS-SA partial observability: a modified Monte Carlo tree search (MCTS) algorithm using only pseudorandom number generator of the simulator differential adaptive stress testing (DAST): failure in targeted system but in baseline AV-FUZZERAV-FUZZER: Finding Safety Violations in Autonomous Driving Systems adv: edge cases and diversity, all 5 types within 20 hours of search on Apollo GA + local fuzzer + repeat differently CROUTElabeled Petri net: map place: a road transition: a set of junction lanes connecting the same roads labels assigned to transitions: traffic signs at junctions route type at a junction: junction topology features, route features at a junction junction topology feature: describe how a road connects with other roads at a junction (a junction contains multiple topology features, junctions maybe topology equivalent) route: consist of lanes route feature: describe land changing and motions for traffic signs, to describe route feature (feature keep when only lane-changing times changes?no.) param format: (initial lanes, target lanes, obstacles positions) gene method: base + search obstacles (causing land changing) mutate method: an adding operator ATLASclassification: road-topology characteristic of a junction lane: describe intersecting lanes of junction lane using incoming and outcoming roads generate different abstract scenarios describing different interaction patterns generate in each abstract scenario: AutoFuzzParacosmprogrammatically describe complex driving situations: a synchronous reactive programming model (reactive: refer to vehicles or persons) Components: It -&gt; Ot, graphical assets, physical properties A Paracosm configuration: components test parameter coverage: k-wise combinatorial coverage &amp; low dispersion various test input generation strategies: random sampling over discrete parameters &amp; deterministic quasi-Monte Carlo methods for continuous parameters Generating and Characterizing Scenarios for Safety Testing of Autonomous Vehiclesinteresting scenario: where a collision or near collision happens, and the AV can avoid it in at least one way (including critical scenarios, can be ranked by complexity; scenario having less CriticalTime before collision is unavoidable) Characterizing: how many safe paths exist and how hard is it to follow them (complexity of the scenario w.r.t. possibility of avoiding accidents) metrics: SafePathInv UnsafePercent AvgEffort MinEffort NarrowInv CriticalTime using ‘the number of computed safe driving paths, total paths in the scenario (all driving trajectories), narrowness of safe paths, and the effort required to follow each safe path’. computed safe driving paths: calculating the annulus sector in the next time-step, discretize the 2D sector with a grid, quantizing the AV valid state tensor representation for AV only (fix the trajectories of all actors other): enumerate all states of AV at time t Generating method: generate an unsafe sequence (initial executed driving scenario as input + perturbations) (change the policy of closest actors (three different attacking modes) &lt;-&gt; distance as cost function;) diversity? , create a critical scenario (sample interesting scenarios by starting from collision time tc and moving back in time to find t0. ) Sequences: states of all the vehicles extracted from real-world data or from driving simulations generate approximately 240 scenarios (80 accidents, more than 90% avoidable) per hour on a single system Surakshaanalyze the safety effects/sensitivities of using various perception (degraded perception due to HW/SW capabilities or inaccurate perception) parameters or level. Generating: goal: efficient scenarios, difficulty levels(depend on AV velocity when the target is revealed) results: 12 driving scenarios for the four categories with difficulty levels, select four scenarios for analysis. Metrics: scenario-independent metrics: Braking L1, Throttle L1, AV coordinate L1, Minimum distance (AV info: Actuators, Location, Velocity, Acceleration; Target obstacle info: Location) Perception Quality Requirements Analysis (error allowed analysis): component-level design choices depend on which metrics AV implementations improvement &amp; component-level requirements (trade-off principle: system has upper limit with poor components under requirements) Adversarial evaluation of autonomous vehicles in lane-change scenariosreward: add penalty for violation of traffic rules driving performance: lane-change success, collision, velocity traffic rules: rules break(?) diversity: N agents (actor and critic in DDPG) with random initializations Clustering: DP-Means by state Sequences generated Multimodal Safety-Critical Scenarios Generation for Decision-Making Algorithms EvaluationMultimodal in multi-modality (pattern/logic Scenarios?) flow-based generative model (to estimate the multimodal distribution of safety-critical scenarios): as the objective function conditional input according to characteristics of the tasks generated: efficiently querying the task algorithms and a simulator flow-based to estimate the multimodal distribution testing at different stress levels pre-training a generative model (assuming RealNVP, a flow-based model) (by maximizing log-likelihood) (to approximate the distribution of the real data) , a modified flow-based model (with a conditional input) (weighted maximum likelihood estimation WMLE where weight related to the risk metric and data probability) (log-likelihood approximately proportional to risk level), adaptive sampler (step along gradient of worth exploring value related to risk metric minus risk level, calculated by NES under Monte Carlo method) SADLneuron activation traces Surprise. with respect to training data. Surprise Adequacy of sets: the range of surprise objective: higher(Surprise Coverage) diversified goal: from those similar to those significantly different and adversarial. with respect to training data adversarial example classifiers? sampling inputs for retraining? broader? SA values reference(attack and defence) Autonomous vehicle security: A taxonomy of attacks and defences 2016 (defense) A non-conservatively defensive strategy for urban autonomous driving 2016 Testing advanced driver assistance systems using multi-objective search and neural networks 2016 PreScan FCW Deepxplore: Automated whitebox testing of deep learning systems 2017 Safe at any speed: A simulation-based test harness for autonomous vehicles 2017 Automated generation of diverse and challenging scenarios for test and evaluation of autonomous vehicles 2017 Adaptive stress testing: Finding failure events with reinforcement learning 2018 Adaptive stress testing for autonomous vehicles 2018 Scalable end-to-end autonomous vehicle testing via rare-event simulation 2018 Simulation-based adversarial test generation for autonomous vehicles with machine learning components 2018 Testing vision-based control systems using learnable evolutionary algorithms 2018 Deeptest: automated testing of deep-neural-network-driven autonomous cars. In: ICSE (2018) DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems (ASE) 2018 Chauffeur-net: Learning to drive by imitating the best and synthesizing the worst. (2019) * Guiding deep learning system testing using surprise adequacy 2019 Generating adversarial driving scenarios in high-fidelity simulators 2019 Boosting operational DNN testing efficiency through conditioning 2019 FSE/ESEC Adaptive stress testing with reward augmentation for autonomous vehicle validation 2019 Automatically testing self-driving cars with search-based procedural content generation 2019 Did we test all scenarios for automated and autonomous driving systems? 2019 Towards system-level testing with coverage guarantees for autonomous vehicles 2019 Genetic algorithm-based test parameter optimization for adas system testing 2019 (attack) Attacking vision-based perception in end-to-end autonomous driving models 2019 (attack) Are self-driving cars secure? evasion attacks against deep neural networks for steering angle prediction 2019 Learning accurate and human-like driving using semantic maps and attention. CoRR (2020) * Generating avoidable collision scenarios for testing autonomous driving systems 2020 Identification and explanation of challenging conditions for camera-based object detection of automated vehicles 2020 * AV-FUZZER: Finding Safety Violations in Autonomous Driving Systems 2020 Coverage-based Scene Fuzzing for Virtual Autonomous Driving Testing 2021 PGFUZZ: Policy-Guided Fuzzing for Robotic Vehicles 2021 Simulation Driven Design and Test for Safety of AI Based Autonomous Vehicles 2021 CVPR Generating and characterizing scenarios for safety testing of autonomous vehicles 2021 (scenario) Depiction of priority lightvehicle pre-crash scenarios for safety applications based on vehicleto-vehicle communications (scenario) Pegasus—first steps for the safe introduction of automated driving (dstop, under single bit-flip) Ml-based fault injection for autonomous vehicles: A case for bayesian fault injection (dsafe) Shared vehicle control using safe driving envelopes for obstacle avoidance and stability (dsafe) Design and evaluation of a driving mode decision algorithm for automated driving vehicle on a motorway (fitness) Fitness functions for testing automated and autonomous driving systems Understanding Error Propagation in Deep Learning Neural Network (DNN) Accelerators and Applications Binfi: an efficient fault injector for safety-critical machine learning systems Tensorfi: A configurable fault injector for tensorflow applications Modeling input-dependent error propagation in programs Understanding error propagation in gpgpu applications VerifAI: A toolkit for the formal design and analysis of artificial intelligence-based systems (test DL) Safety verification of deep neural networks. In: CAV (2017) * (test DL) Reluplex: An efficient SMT solver for verifying deep neural networks. In: CAV (2017) * AV accidents reported: California DMV (https://www.dmv.ca.gov/portal/dmv/detail/vr/autonomous/testing), Waymo simulated driving behavior in reconstructed fatal crashes within an autonomous vehicle operating domain, Database approach for the sign-off process of highly automated vehicles, Survey on scenario-based safety assessment of automated vehicles. Generating effective test cases for self-driving cars from police reports 2019 攻击面在于软件输入：系统正常状态下能否正常实现某些功能 还有纯软件层面（系统不正常）和纯算法（实现某些功能时的满意度）层面。 （Formal Verification）a formal scenario description language: to represent an operational design domain (ODD) （ disa: only focus on one component of the system or a simple scenario, hard for perception component） scenarios: sensor noise, driving maneuvers Scenic: a language for scenario specification and scene generation. (Defining and substantiating the terms scene, situation, and scenario for automated driving, Scenarios for development, test and validation of automated vehicles, Ontology based scene creation for the development of automated vehicles) failures: possible (frequency, realistic), dangerous, Adaptive stress testing (AST) : find the most likely path from a start state to a failure state in a discrete-time simulator, a Markov decision process. (disa: failure is unavoidable; same types of failures ) Fuzzing (AFL, Fuzz revisited: A re-examination of the reliability of unix utilities and services.), grammar-based fuzzing ( Grammar-based whitebox fuzzing., Evolutionary grammar-based fuzzing.), structure-aware fuzzing ( GRIMOIRE: synthesizing structure while fuzzing., SLF: fuzzing without valid seed inputs.). RL: Observing a repeated one, necessary for RL to be effective, requires RL to accumulate a huge set of historical data, which can be very time-consuming. In contrast, GA guides the search by trial and error without relying on having a huge set of historical data. metamorphic testing: if two inputs to a DL system are similar with respect to some human sense, the outputs should also be similar 看到奇怪的名词先在原文搜索， 如果是普通词组合的描述则一般要看原文整段。 论文直接的相关研究一般采用1年前的多一点，更老的更新的都会比较少。 distribution function workflow objective: reward, fitness, loss","permalink":"http://mingg2333.top/2022/01/04/AV-test-evaluation/","photos":[]},{"tags":[{"name":"programming language","slug":"programming-language","permalink":"http://mingg2333.top/tags/programming-language/"},{"name":"C","slug":"C","permalink":"http://mingg2333.top/tags/C/"}],"title":"C","date":"2021/12/31","text":"Created: 2021-12-31 23:41:36 Modified: 2021-12-31 23:41:36 programming language C stringhttps://www.runoob.com/cprogramming/c-standard-library-string-h.html // refer to #include &lt;string.h&gt;","permalink":"http://mingg2333.top/2021/12/31/languageC/","photos":[]},{"tags":[{"name":"Java","slug":"Java","permalink":"http://mingg2333.top/tags/Java/"}],"title":"Java","date":"2021/12/15","text":"Created: 2021-12-15 23:58:01 Modified: 2021-12-15 23:58:01 jdkrefer to https://blog.csdn.net/hty1053240123/article/details/52504952 and https://developer.aliyun.com/article/704959. getconf LONG_BITjava --versionwhereis javacd Downloadssudo mkdir /usr/javasudo tar -zxvf jdk-8u291-linux-x64.tar.gz -C /usr/java/cd /usr/java/sudo mv jdk1.8.0_291 jdk_8u291sudo gedit ~/.bashrcsource ~/.bashrcsudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/java/jdk_8u291/bin/java\" 300sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/java/jdk_8u291/bin/javac\" 300sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/java/jdk_8u291/bin/javaws\" 300sudo update-alternatives --install /usr/bin/jar jar /usr/java/jdk_8u291/bin/jar 300sudo update-alternatives --install /usr/bin/javah javah /usr/java/jdk_8u291/bin/javah 300sudo update-alternatives --install /usr/bin/javap javap /usr/java/jdk_8u291/bin/javap 300sudo update-alternatives --config javajava -versionsudo update-alternatives --config javac ~/.bashrc: #set oracle jdk environmentexport JAVA_HOME=/usr/java/jdk_8u291 ## 这里要注意目录要换成自己解压的jdk 目录export JRE_HOME=${JAVA_HOME}/jreexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/libexport PATH=${JAVA_HOME}/bin:$PATH","permalink":"http://mingg2333.top/2021/12/15/Java/","photos":[]},{"tags":[{"name":"CAN","slug":"CAN","permalink":"http://mingg2333.top/tags/CAN/"},{"name":"bus","slug":"bus","permalink":"http://mingg2333.top/tags/bus/"}],"title":"Controller Area Network","date":"2021/12/12","text":"Created: 2021-12-11 22:56:28 Modified: 2021-12-12 20:51:29 CAN Bus 1 简介用于多设备通信。 目前包括ISO 11898-2（高速度CAN）和ISO 11898-3（低速/容错CAN）两个主要标准。 特点：复用通信线缆，多主机串行总线标准，消息传递协议，信息导向传输协定的广播机制（Broadcast Communication Mechanism）。 优点：增加节点而不用在现有软、硬件上做出调整；不基于特殊种类的节点。 2 硬件 物理层节点和总线。 节点：即设备，包括ECU（传感器、驱动器等控制设备）、网关（与计算机连接）等。 节点的CAN相关硬件组成：MCU、CAN Controller、CAN Transceiver。 CAN Transceiver：转换逻辑电平（来自CAN Controller）和差分信号电平（兼容CAN Bus）。 ps. 从隐性信号（1）向显性信号（0）过渡的速度更快，因为此时CAN线缆被主动积极地驱动。显性向隐性的过渡速度主要取决于CAN网络的长度和导线的电容。 2.1 ISO 11898-2总线：两根平行电线（CAN_H和CAN_L），双绞线，串终端阻抗（120Ω，电缆的特性阻抗为120Ω，为了模拟无限远的传输线，抑制信号反射，同时可以使总线电压回到隐性状态或者闲置状态）。 多主机与广播。 差分信号：不归零(NRZ)格式。 半双工：在一个主机上收发不同时进行。 波特率。 3 传输层CAN标准主要体现在总线上。 消息帧：帧起始、仲裁段、CRC、ACK等。 帧起始：同步。 仲裁段：信息标识符（Message Identifier，每个标志符在整个网络中独一无二）表示优先级，实现无损位仲裁机制。 筛选。 邮箱。 5 应用70个电子控制器（ECU）间通信","permalink":"http://mingg2333.top/2021/12/12/can/","photos":[]},{"tags":[{"name":"Python","slug":"Python","permalink":"http://mingg2333.top/tags/Python/"}],"title":"python","date":"2021/12/09","text":"Created: 2021-05-28 08:32:57 Modified: 2021-12-09 22:19:45 refer to https://python3-cookbook.readthedocs.io/zh_CN/latest/index.html, https://www.runoob.com/python/python-tutorial.html, http://www.pythondoc.com/pythontutorial3/appetite.html python and pip# windowswhere python# linuxwhereis python# pippython3 -m pip listpip3 listpip show &lt;module&gt; special file __init__.py: claim the package of python and collect class and function __main__.py: # __main__.py in packagepython __main__.py ...# =&gt; python -m package_name ...# =&gt; (after installation)package_name ... basic operationb = aa is b# True#c = a.copy()#c is a## False math operationa = 3.75int(a)round(a)import mathmath.floor(a)math.ceil(a) advanced operation# retun# pass# raise# assert# trytry: main-actionexcept Exception1: handler1except Exception2: handler2...else: # no exception else-blockfinally: # exception finally-block lambda and functiondef sum(x,y):# or def sum(x:int=1,y:int=2) -&gt; int: return x+yp = lambda x,y:x+ysum(1,2)==p(1,2)# True mapa = [2] * 9list(map(str, a))# ['2', '2', '2', '2', '2', '2', '2', '2', '2']list(map(lambda x:x**2, a))# [4, 4, 4, 4, 4, 4, 4, 4, 4] iteratorrefer to https://www.runoob.com/python3/python3-iterator-generator.html class MyNumbers: def __iter__(self): self.a = 1 return self def __next__(self): self.a += 1 if self.a &gt;= 10: raise StopIteration return self.a# usage 1for x in myclass:# or for x in iter(myclass): print(x) if x &gt; 5: break# usage 2myiter = iter(myclass)next(myiter) strjoin split format ast.literal_eval# a &lt;class 'str'&gt; or list(&lt;class 'str'&gt;) or tuple(&lt;class 'str'&gt;)a = 'gdfgdf'a = ['gdfgdf','hfgdhjfj']','.join(a)# 'g,d,f,g,d,f'# 'gdfgdf,hfgdhjfj'# b &lt;class 'str'&gt;b = 'g,d,f,g,d,f'b = 'gdfgdf,hfgdhjfj'b.split(',')# ['g', 'd', 'f', 'g', 'd', 'f']# ['gdfgdf', 'hfgdhjfj']'***{}***{}***'.format(a,b)# \"***['gdfgdf', 'hfgdhjfj']***gdfgdf,hfgdhjfj***\"# c str(&lt;class 'list'&gt;) or str(&lt;class 'tuple'&gt;) or ...c = \"['gdfgdf', 'hfgdhjfj']\"import astast.literal_eval(c)# ['gdfgdf', 'hfgdhjfj'] text justification'''原字符串左侧对齐， 右侧补零:'''str.ljust(width,'0') input: '789'.ljust(32,'0')output: '78900000000000000000000000000000''''原字符串右侧对齐， 左侧补零:方法一：'''str.rjust(width,'0') input: '798'.rjust(32,'0')output: '00000000000000000000000000000798''''方法二：'''str.zfill(width)input: '123'.zfill(32)output:'00000000000000000000000000000123''''方法三：''''%07d' % ninput: '%032d' % 89output:'00000000000000000000000000000089'# refer to: https://blog.csdn.net/weixin_42317507/article/details/93411132 listvowels = ['e', 'a', 'u', 'o', 'i']vowels.sort(reverse=True) # no return, just sort 'vowels' dictrefer to https://www.runoob.com/python/python-dictionary.html collectionsCounterfrom collections import Counter data_col_dict = Counter(data_col) data_col_tuple_sort_list = data_col_dict.most_common() for item in data_col_dict.items(): OrderedDictclass OrderedDict(dict) ‘’’dict with order’’’ namedtupleto defien a customed tuple-like type numpyrefer to https://juejin.cn/post/6844903827473219597, https://blog.csdn.net/weixin_38283159/article/details/78793277, https://www.cnblogs.com/mzct123/p/8659193.html, Python必备基础：这些NumPy的神操作你都掌握了吗？ - 腾讯云开发者社区-腾讯云 (tencent.com) import numpy as npa=np.arange(12)# a &lt;- array([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])# shape: (12,)a.resize(2,3,2)# or a.shape=(2,3,2)# a &lt;- array([[[ 0, 1],# [ 2, 3],# [ 4, 5]],# [[ 6, 7],# [ 8, 9],# [10, 11]]])a.reshape(3,4)# array([[ 0, 1, 2, 3],# [ 4, 5, 6, 7],# [ 8, 9, 10, 11]])a.dtype, a.shape, a.size, a.ndim# (dtype('int64'), (2, 3, 2), 12, 3)b = ac = a.copy()d = a.ravel()e = a.flatten()# d,e &lt;- array([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])a[0] = 666# or b[0] = 666# a,b &lt;- array([[[666, 666],# [666, 666],# [666, 666]],# [[ 6, 7],# [ 8, 9],# [ 10, 11]]])# d &lt;- array([666, 666, 666, 666, 666, 666, 6, 7, 8, 9, 10, 11])d[0]=555# a,b &lt;- array([[[555, 666],# [666, 666],# [666, 666]],# [[ 6, 7],# [ 8, 9],# [ 10, 11]]])# d &lt;- array([555, 666, 666, 666, 666, 666, 6, 7, 8, 9, 10, 11])a[...,np.newaxis,:]# or np.expand_dims(a, axis=2)# array([[[[555, 666]],# [[666, 666]],# [[666, 666]]],# [[[ 6, 7]],# [[ 8, 9]],# [[ 10, 11]]]])# shape:(2, 3, 1, 2)f = a[...,np.newaxis,:]f.transpose(3,2,1,0)# f.transpose()# array([[[[555, 6],# [666, 8],# [666, 10]]],# [[[666, 7],# [666, 9],# [666, 11]]]])# shape:(2, 1, 3, 2)np.squeeze(f)# array([[[555, 666],# [666, 666],# [666, 666]],# [[ 6, 7],# [ 8, 9],# [ 10, 11]]])# shape:(2, 3, 2)np.argwhere(f&lt;100)# array([[1, 0, 0, 0],# [1, 0, 0, 1],# [1, 1, 0, 0],# [1, 1, 0, 1],# [1, 2, 0, 0],# [1, 2, 0, 1]]) Note: the dtype of np.str_ includes the limitation of length of the str. stringimport string matplotlibpyplotrefer to https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.html. plotimport numpy as npimport matplotlib.pyplot as pltx = np.arange(0, 5, 0.1)y = np.sin(x)plt.plot(x, y)# color https://blog.csdn.net/CD_Don/article/details/88070453 pauseimport matplotlib.pyplot as pltimport numpy as npnp.random.seed(19680801)data = np.random.random((50, 50, 50))fig, ax = plt.subplots()for i in range(len(data)): ax.cla() ax.imshow(data[i]) ax.set_title(\"frame {}\".format(i)) plt.pause(0.1)# refer to: https://blog.csdn.net/mighty13/article/details/116671083 animationrefer to https://matplotlib.org/stable/api/animation_api.html import numpy as npimport matplotlib.pyplot as pltfrom matplotlib.animation import FuncAnimationfig, ax = plt.subplots()xdata, ydata = [], []ln, = plt.plot([], [], 'ro')def init(): ax.set_xlim(0, 2*np.pi) ax.set_ylim(-1, 1) return ln,def update(frame): xdata.append(frame) ydata.append(np.sin(frame)) ln.set_data(xdata, ydata) return ln,ani = FuncAnimation(fig, update, frames=np.linspace(0, 2*np.pi, 128), init_func=init, blit=True)plt.show()# ani.save('contrast.mp4', fps=15,# extra_args=['-vcodec', 'libx264'],# writer='ffmpeg_file')# ani.save('contrast.gif', writer='imagemagick', fps=30)# refer to: https://matplotlib.org/stable/api/animation_api.html#funcanimation, related to: https://www.bbsmax.com/A/gGdXbVvmJ4/ *trouble: why it becomes slower and slower when it handles many photos? The following pipeline has the same trouble (the two pipeline both use canvas): # animationimport matplotlib.pyplot as pltimport numpy as npx = np.linspace(0, 6*np.pi, 100)y = np.sin(x)# You probably won't need this if you're embedding things in a tkinter plot...plt.ion()fig = plt.figure()ax = fig.add_subplot(111)line1, = ax.plot(x, y, 'r-') # Returns a tuple of line objects, thus the commafor phase in np.linspace(0, 10*np.pi, 500): line1.set_ydata(np.sin(x + phase)) fig.canvas.draw() fig.canvas.flush_events()# refer to: https://stackoverflow.com/questions/4098131/how-to-update-a-plot-in-matplotlib syssys.path.append(path) oshandle directory import osfilePath = 'C:\\\\myLearning\\\\pythonLearning201712\\\\carComments\\\\01\\\\'os.listdir(filePath)# 查看当前工作目录os.getcwd()# 修改当前工作目录os.chdir( path )# frequent use alongos.mkdir(path)# refer to https://blog.csdn.net/happyjacob/article/details/109279118os.environfrom environs import Envenv = Env()SIM = env.str('SIM', 'fsdfds') pathimport os, syspath = __file__# path &lt;- file full path &lt;class 'str'&gt;os.path.basename(path)# file nameos.path.dirname(path)# directory pathos.path.split(path)# [directory path, file name]os.path.splitext(path)# [file path, extension name]os.path.join(basepath, relpath, ...)os.path.relpath(path[, basepath])os.path.exists(path)os.path.isfile(path)os.path.isdir(path)os.path.getsize(path) walk# walkimport ospath = r'./'ext = '.py'roots_dict = {}for root, dirs, files in os.walk(path): ''' root is a string, the path to the directory, consistent with 'path'. dirs is a list of the names of the subdirectories in root (excluding '.' and '..'). files is a list of the names of the non-directory files in root. Note that the names in the lists are just names, with no path components. To get a full path (which begins with top) to a file or directory in root, do os.path.join(root, name). ''' print('there are {} dir(s) and {} file(s) in the root of {}'.format( \\ len(dirs), len(files), root)) roots_dict[root] = dirs + files files_filter = [] if ext != None: for file in files: if os.path.splitext(file)[-1] in ext: files_filter.append(file) else: files_filter.extend(files) print('len(files_filter)', ': ', len(files_filter)) if len(files_filter) == 0: print() continue # insert operation to process files_filter print()print(roots_dict) timedatetimerefer to How to get current date and time in Python?How to get current date and time in Python? pathlibPathpowerful tool for manage path, refer to https://docs.python.org/zh-cn/3/library/pathlib.html from pathlib import Path# refer to: https://docs.python.org/zh-cn/3/library/pathlib.html functoolspartialfrom functools import partialdef Func(a, b = None): print(a, b) passworker = partial(Func, b=1)worker(a='test')# test 1 multiprocessingrefer to https://docs.python.org/zh-cn/3/library/multiprocessing.html. # Create a new processfrom multiprocessing import Process, Manager, freeze_support, set_start_methodimport time # optional# create a new preocess using method 1:class MyNewProcess(Process): def __init__(self, mdic): self.mdic = mdic super().__init__() def run(self): time_start = time.time() while (time.time() - time_start &lt; 15): self.mdic[\"action\"] += 2 print(\"subprocess1 action = \", self.mdic[\"action\"]) time.sleep(1.6) # run 2/1=2 times per main while print(\"subprocess1 over!\") print(\"subprocess1 stop!\")# create a new preocess using method 2:def subprocess2(mdic): time_start = time.time() while (time.time() - time_start &lt; 11): mdic[\"action\"] += 1 print(\"subprocess2 action = \", mdic[\"action\"]) time.sleep(0.5) # run 2/0.5=4 times per main while print(\"subprocess2 over!\") print(\"subprocess2 stop!\")# main perocess where two precesses are createddef main(): # create global dict among processes manager = Manager() # must set after '__main__' mdic = manager.dict() mdic[\"action\"] = 0 p = MyNewProcess(mdic, ) p.start() # to call p.run() p1 = Process(target=subprocess2, args=(mdic, )) p1.start() time_start = time.time() while (time.time() - time_start &lt; 7): mdic[\"action\"] = 0 print(\"main action = \", mdic[\"action\"]) time.sleep(2) print(\"main process over!\") p.join() p1.join() print(\"main process stop!!!\")if __name__ == '__main__': # freeze_support() # set_start_method('spawn') main()# ————————————————# refer to：https://docs.python.org/zh-cn/3/library/multiprocessing.html, # https://blog.csdn.net/qq_32460819/article/details/119257062, # https://blog.csdn.net/u012193416/article/details/78396814, related to: https://www.cnblogs.com/chentianwei/p/11914268.html, Poolno special type related to: https://blog.csdn.net/u012193416/article/details/78396814 signalrefer to https://docs.python.org/3/library/signal.html import signal, osdef handler(signum, frame): print('Signal handler called with signal', signum) raise OSError(\"Couldn't open device!\")# Set the signal handler and a 5-second alarmsignal.signal(signal.SIGALRM, handler)signal.alarm(5)# This open() may hang indefinitelyfd = os.open('/dev/ttyS0', os.O_RDWR)signal.alarm(0) # Disable the alarm# sample from: https://docs.python.org/3/library/signal.html#example txtimport sysimport codecsif (sys.version_info &gt;= (3, 5)): fd = open(filename, 'r') f = fdelif (sys.version_info &gt;= 2.7): fd = codecs.open(filename, 'r') f = fdline = f.readline()splitline = line.strip().split(' ')# orlines = f.readlines()splitlines = [x.strip().split(' ') for x in lines] imageimport Imageimport numpy as npImage.open(object.logo.path).convert('RGB').save('/tmp/output.png') xlshandle .xls import xlwtworkbook = xlwt.Workbook(encoding = 'utf-8')worksheet = workbook.add_sheet('Worksheet'+str(0))worksheet.write(0, 0, 'Num')#row, col, *argsworksheet.write(0, 1, 'unicode')worksheet.write(0, 2, 'char')worksheet.write(0, 3, 'char_wide')worksheet.write(0, 4, 'char_hash')workbook.save('Excel_test'+str(0)+'.xls')import xlrdexce = xlrd.open_workbook('Excel_test.xls')sheet1 = exce.sheet_by_name('Worksheet1')nrows = sheet1.nrowsunicod = sheet1.col_values(1)char_wide = sheet1.col_values(3)char_hash = sheet1.col_values(4) htmlrefer to https://blog.csdn.net/sinat_26917383/article/details/78204653 pywinautocontrol mouse and keys PyQtrelated to: https://blog.csdn.net/toby54king/article/details/105187934 static variablesrefer to https://www.jianshu.com/p/3ed1037b7c18, def static_vars(**kwargs): def decorate(func): for k in kwargs: setattr(func, k, kwargs[k]) return func return decorate@static_vars(counter = 0)def foo(): foo.counter += 1 MLscikit-learnpip install scikit-learn TSNErefer to TSNE实现降维及可视化_CtrlZ1的博客-CSDN博客_tsne降维TSNE实现降维及可视化_CtrlZ1的博客-CSDN博客_tsne降维 CVOpenCVpip install opencv-python imgpath=r\"d:/20200708002140.jpg\"img=cv2.imread(imgpath)cv2.namedWindow('image', ) # cv2.WINDOW_NORMALcv2.moveWindow(\"image\", 1000, 100) # x, y for all screenscv2.imshow(\"image\", img)cv2.waitKey()# refer to","permalink":"http://mingg2333.top/2021/12/09/py-libs/","photos":[]},{"tags":[{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"},{"name":"Colab","slug":"Colab","permalink":"http://mingg2333.top/tags/Colab/"},{"name":"Jupyter","slug":"Jupyter","permalink":"http://mingg2333.top/tags/Jupyter/"}],"title":"colab","date":"2021/12/08","text":"Created: 2021-12-08 18:37:30 Modified: 2021-12-08 18:37:30 Google Colab is a free platform to use GPUs and TPUs, different from Google Cloud. It is based on driver.google to store jupyter notebook and your own data, though some public ram and rom delivered by colab. use with vscodewith colab_ssh, Cloudflare and Remote-SSHrefer to Colab + Vs Code + GitHub + Jupyter (Perfect for Deep Learning) and How to Connect to VSCode to Colab. Push Colab to Cloudflare, then there will be tips for following steps in your screen. !pip install colab_ssh --upgradefrom colab_ssh import launch_ssh_cloudflared, init_git_cloudflaredlaunch_ssh_cloudflared(password=\"yourpassword\") Following the tips in the screen, download binary file of Cloudflare as /to/path/cloudflared-linux-amd64, and chmod +x /to/path/cloudflared-linux-amd64 Remote Configuration modifying ~/.ssh/config. # Read more about SSH config files: https://linux.die.net/man/5/ssh_configHost *.trycloudflare.com HostName %h User root Port 22 ProxyCommand /to/path/cloudflared-linux-amd64 access ssh --hostname %h Test the connection in local terminal. ssh channels-enhancing-aw-specifies.trycloudflare.comnvidia-smiexit Connect with VSCode Remote SSH. PressCtrl+Shift+P and type “Connect to Host…” and then paste the following hostname in the opened command palette. channels-enhancing-aw-specifies.trycloudflare.com Test in the remote terminal. nvidia-smi runtimerestartimport osos.kill(os.getpid(), 9)","permalink":"http://mingg2333.top/2021/12/08/colab/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"},{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"},{"name":"multi-device","slug":"multi-device","permalink":"http://mingg2333.top/tags/multi-device/"}],"title":"multi-device learning","date":"2021/12/07","text":"Created: 2021-12-7 11:55:30 Modified: 2021-12-7 11:55:30 Federated Learningb2c: Model c2b: Loss, Metrics","permalink":"http://mingg2333.top/2021/12/07/multi-device-learning/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"},{"name":"adversarial examples","slug":"adversarial-examples","permalink":"http://mingg2333.top/tags/adversarial-examples/"},{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"}],"title":"Adversarial examples","date":"2021/11/26","text":"Created: 2021-11-26 19:43:58 Modified: 2021-11-26 19:43:58 introductionML adversarial examples (not out-of-domain (OOD) samples, distribution shift, data transformation, shortcut learning[1-3]) semantics-preserving or not perturbations/insertion (function performance, attack/adversary success rate, perturbation rate) gradient-based, query&amp;score-based(search method and search space), query&amp;class-based, none? untargeted attack and targeted attack applying on image, speech, language Mnemonic Reader’s self-alignment layer against adversarial examples defense goal: perform on par with human crowd-workers adversarial training[4-5]/randomized smoothing[6-7] [1]The effect of natural distribution shift on question answering models. [2] Tasty burgers, soggy fries: Probing aspect robustness in aspect-based sentiment analysis. [3]Shortcut learning in deep neural networks. [4] Explaining and harnessing adversarial examples. [5]Towards deep learning models resistant to adversarial attacks. [6]Certified adversarial robustness via randomized smoothing. [7]SAFER: A structure-free approach for certifified robustness to adversarial word substitutions.( data augmentation approach) imageChristian Szegedy, Wojciech Zaremba, Ilya Sutskever, Joan Bruna, Dumitru Erhan, Ian Goodfellow, and Rob Fergus. 2013. Intriguing properties of neural networks. arXiv preprint arXiv:1312.6199. 1 black box settingN. Papernot, P. McDaniel, I. Goodfellow, S. Jha, Z. Ce\u0002 lik, and A. Swami. 2016a. Practical black-box attacks against machine learning. arXiv preprint arXiv:1602.02697. 2 white box setting Fast Gradient Sign method or iterative methods based on constrained gradient descent speechNicholas Carlini, Pratyush Mishra, Tavish Vaidya, Yuankai Zhang, Micah Sherr, Clay Shields, David Wagner, and Wenchao Zhou. Hidden voice commands. In USENIX Security Symposium, pp. 513– 530, 2016. Nicholas Carlini and David Wagner. 2018. Audio ad\u0002 versarial examples: Targeted attacks on speech-to\u0002 text. arXiv preprint arXiv:1801.01944. obfuscated examples reinforcement learningVahid Behzadan and Arslan Munir. Vulnerability of deep reinforcement learning to policy induction attacks. arXiv preprint arXiv:1701.04143, 2017 languagelanguage adversarial attack vulnerabilities of NLP systems discrete nature human-crafted rules/models sentence-level, word level and character-level 1 black box settingno any explicit knowledge of the model parameters only query heuristic (scrambling, misspelling, or removing words distracting sentencesR. Jia and P. Liang, “Adversarial examples for evaluating reading comprehension systems,” in EMNLP, 2017 concatenative examples model: overstability SQuAD, paragraphs that contain adversarially inserted sentences ADDSENT method: generate a raw distractor sentence (semantics-altering question, corresponding fake answer, declarative form, crowdsourcing, greater human-approved sentence) ADDONESENT: control group (a random human-approved sentence, model-independent) ADDANY method: random ungrammatical sentence, local search, ADDCOMMON: control group(words from common words) motivation: questions answered with heuristics based on type and keyword-matching note that: words from the question GANs[2017] Zhao, Z.; Dua, D.; and Singh, S. 2017. Generating natural adversarial examples. limited to short texts greedy heuristicICLR 2018 Adversarial Examples for Natural Language Classification Problems Altered examples propose: Semantic similarity &amp; Syntactic similarity method: one-word changes(N closest, GloVE), choose best(improves the objective the most) back-translationRibeiro, M. T.; Singh, S.; and Guestrin, C. 2018. Semantically equivalent adversarial rules for debugging nlp models. machine-generated rules genetic algorithms: population-based optimizationEMNLP 2018 Generating Natural Language Adversarial Examples sentiment analysis and textual entailment method: word replacements(GloVe + counter-fitting method + Google 1 billion words language model), fitness is target label prediction probability ? population-based (combinatorial optimization problems, fewer modifications): fitness function to choose Fitter TextBuggerNDSS 2019 method: find important sentences (spaCy library), find important words(a scoring function, after removing word) PWWSGenerating natural language adversarial examples through probability weighted word saliency. 下游探测 PSOWord-level textual adversarial attacking as combinatorial optimization. TextFoolerAAAI 2020 (Oral) text classification and textual entailment utility-preserving method: selection mechanism for important words (by deleting each word to affect prediction score) of model (&amp;filter out stop words); replace in a special way (select Synonym with POS checking, success with highest USE as similarity scores or the closest success) BERT, CNN, RNN (LSTM) BERT-ATTACKmethod: finding the vulnerable words(high significance influence on the final output logit), generate substitutes using bert(BERT-based lexical substitution) BAEBU-MHSAAAI 2021 Bigram and Unigram based Monotonic Heuristic Search (BU-MHS) unigram: change one word -&gt; phrases meaning may change method: avoid producing meaningless outputs (Bigram and Unigram Based, HowNet), replace the input words (synonyms and sememe candidates), priority of word and its combinations(BU-MHS), BESA(IJCAI-21) BERT-based Simu\u0002 lated Annealing algorithm method: generate contextual-aware candidate words using BERT, determine order with global optima(Simulated Annealing (SA)) MAYAEMNLP 2021 label-based &amp; score-based Multi-granularity attack agent(RL?, behavior cloning with the expert knowledge) method 1&amp;2: generate( constituency parsing[1], rewriting constituents under strict grammatical constraints/word-level MLM before WordNet), {2: candidate selected by BERT,} verify, {pick} advantage: less queries, more utility in real [1]Fast and accurate neural CRF constituency parsing. QESEMNLP 2021 method: select(attention model, without altering the semantics), with replace choose in search space(division with locality sensitive hashing using Random Projection Method (RPM) on a sentence encoder (USE)) advantage: less queries, regardless search space StyleAttackEMNLP 2021 text style transfer method: text style transfer(STRAP (Style Transfer via Paraphrasing), Sentence-BERT) white box settingcomplete knowledge of the model: architecture, parameters, or training data kerckhoff’s principle HotFilpACL 2018 classification real-world adversarial examples (Multiple Changes) a few atomic flip operation (character substitutions, enable insertion and deletion) manipulate one-hot input vectors (each represents a character of a word of a sequence) gradients ( the greatest absolute directional derivatives) based : estimate which individual change and beam search to find a set : efficiency (fast) HotFlip at Word-Level (semantics-preserving constraints) CharCNN-LSTM related: S. Samanta and S. Mehta, “Towards crafting text adversarial samples,” TextBuggerNDSS 2019 method: find important words order (Jacobian matrix of the classifier), generate 5 types for each in order, choose optimal bug(change of confidence value, must below a threshould): character-level perturbation: use words not in the dictionary (insert, delete, swap, visually similar characters) word-level perturbation: semantic-preserving technique (GloVe model) codeA Survey on Adversarial Attacks for Malware Analysis. constraint: not affect both the functionality and executability of malware file transformation: manipulate, insert, delete, bytes; code obfuscation domain: windows portable executable file, PDF file and android APK file: mutable and immutable section of the file targered model: signature based and behavioral based(against zero-day attacks) malware detector apgIntriguing Properties of Adversarial ML Attacks in the Problem Space. Android malware detection DREBIN classifier(Linear SVM, Sec SVM) transformation: automated software transplantation(extract slices of bytecode (i.e., gadgets) from benign donor app, inject full slices into a malicious host, i.e., only addition of bytecode): program slicing, never executed at runtime, opaque predicates to avoid Program analysis techniques, collect in an ice-box G without on-the-fly, side-effect feature vectors: inject each gadget into a minimal app DeepDetectNet vs RLAttackNet: An adversarial method to improve deep learning\u0002 based static malware detection model Version:0.9 StartHTML:0000000105 EndHTML:0000000533 StartFragment:0000000141 EndFragment:0000000493 Black-Box Adversarial Attacks Against Deep Learning Based Malware Binaries Detection with GAN Version:0.9 StartHTML:0000000105 EndHTML:0000000511 StartFragment:0000000141 EndFragment:0000000471 Generating End-to-End Adversarial Examples for Malware Classififiers Using Explainability Version:0.9 StartHTML:0000000105 EndHTML:0000000350 StartFragment:0000000141 EndFragment:0000000310 SAFE: Self-Attentive Function Embeddings for Binary Similarity tool kitvisual attack toolkits: Cleverhans (Papernot et al., 2016a), FoolBox (Rauber et al., 2017), Adversarial Robustness Toolbox (ART)(Nicolae et al., 2018), DEEPSEC (Ling et al., 2019), AdvBox (Goodman et al., 2020) textual adversarial attacks: TextAttack (Morris et al., 2020), OpenAttack(Guoyang Zeng, 2021) ART TextAttacknew attack designrefer to query-attack textattack/__init__.pytextattack/attack_args.py(args.attention_model, arg, build())# for arg processtextattack/attack_recipes/__init__.pytextattack/attack_recipes/lsh_with_attention_maheshwary_2021.py # queryatt: search methodtextattack/search_methods/greedy_word_swap_wir.py # queryatt: search method add lsh_with_attentiontextattack/attention_models/* classclass ModelWrapper(ABC): \"\"\"A model wrapper queries a model with a list of text inputs. Classification-based models return a list of lists, where each sublist represents the model's scores for a given input. Text-to-text models return a list of strings, where each string is the output – like a translation or summarization – for a given input. \"\"\" def __call__(self): return outputsclass HuggingFaceDataset(Dataset): def __getitem__(self, i): \"\"\"Return i-th sample.\"\"\" OpenAttacklisthttps://nicholas.carlini.com/writing/2019/all-adversarial-example-papers.html Applicationadversarial training: interleaves training with generation of adversarial examples interpretability: Feng, S.; Wallace, E.; Grissom, I.; Iyyer, M.; Rodriguez, P.; Boyd-Graber, J.; et al. 2018. Pathologies of neural models make interpretations difficult vocabulary&amp;knowledgewith respect to, like “of” a one-hot vector: adversary L2 norm: L ∞ norm: L ≥ 1 constraints: -ed, means previous introduction in above paragraph , or more concretely Specifically L0 distance greedy or beam search: r being the budget and b, the beam width We elaborate on this with an example: as: Comparison based on: effective: outperforms the previous efficient: lower computational complexity utility-preserving: preserves semantic content, grammaticality, and correct types classified by humans trivial: ordinary strikes a balance between raw texts: edit distance and Jaccard similarity coefficient word vectors: Euclidean distance and semantic similarity Universal Sentence Encoder: a encoder transferring sentence to high dimensional vector greater than 0.5 with probability proportional to perform on par with human crowd-workers shed light on thick solid line thin solid line is attributed to: 取决于,归咎于 end","permalink":"http://mingg2333.top/2021/11/26/Adversarial-examples/","photos":[]},{"tags":[{"name":"paradigm","slug":"paradigm","permalink":"http://mingg2333.top/tags/paradigm/"}],"title":"copywriting paradigm","date":"2021/11/16","text":"Created: 2021-11-16 23:39:58 Modified: 2021-11-16 23:39:58 instruction book simple introduction. detailed introduction with example. analysis based on the example. 1. Symbolic Execution, a means of analyzing a program, determines inputs (in symbolic values) of each part of the program, and use those symbols to make up expressions for variables in the program and constraints for the possible outcomes of each conditional branch.2. For example, there is a symbolic state σ including variable expressions, and symbolic execution path constraint π presented by branches. The symbolic store σ and are updated each turn where new line is analyzed.When analysis is interrupted, like meeting assert, a judge of error happens by combining σ with π.3. advantages. - finding precise ranges of variables instead of specific value of variables. - easily creating some specific value of variables. - higher code coverage due to higher variable coverage. - more sorts of error types, like assertion violations, uncaught exceptions, security vulnerabilities, and memory corruption. 4. disadvantage. - infinite constraint in certain occasion, like loop with specical ending condition.","permalink":"http://mingg2333.top/2021/11/16/paradigm/","photos":[]},{"tags":[{"name":"software","slug":"software","permalink":"http://mingg2333.top/tags/software/"},{"name":"afl","slug":"afl","permalink":"http://mingg2333.top/tags/afl/"}],"title":"Fuzzing","date":"2021/11/15","text":"Created: 2021-05-28 09:09:58 Modified: 2021-11-15 19:17:10 AFLTechnical “whitepaper” for afl-fuzz. quick use installation. git clone git@github.com:google/AFL.gitcd AFLmakesudo make install# check installationafl-gcc fuzzing test. cd ~/Documentsmkdir testcd testmkdir ipnut output# prepare targeted file imgRead.c, refer to Appendix Atouch imgRead.c# after writing imgRead.c, compile the program using afl-gccafl-gcc -fsanitize=address -fsanitize=undefined imgRead.c -o imgRed# prepare input, refer to https://www.youtube.com/watch?v=NiGC1jxFx78&amp;list=PLHGgqcJIME5koI76OlBdBj7sCid1hbjf-&amp;index=3echo \"aaaa\" &gt; input/image.imgecho \"IMG\" &gt; input/image.imgxxd input/image.imgafl-fuzz -i input/ -o output -m none -- ./imgRed @@# for troubleshooting refer to Appendix B# press Ctrl + C to exit from afl-fuzz analysis. xxd id:000000,sig:06,src:000000,op:havoc,rep:64# or use crashwalk, refer to https://www.freebuf.com/articles/system/197678.htmlsudo apt-get install gdb golangcd ~mkdir toolscd toolsgit clone https://github.com/jfoote/exploitable.gitmkdir goexport GOPATH=~/tools/goexport CW_EXPLOITABLE=~/tools/exploitable/exploitable/exploitable.pygo get -u github.com/bnagy/crashwalk/cmd/...# wait for downloading, then use cwtriage~/tools/go/bin/cwtriage -root ~/Documents/mycode/test/ -afl Code Coverage. # use afl-cov, refer to https://www.freebuf.com/articles/system/197678.html ConceptCFGCFG, control flow graph, consists of node(block) and edge. Code Coveragerefer to SanitizerCoverage. AppendixA. targeted file // imgRead.c// refer to https://www.youtube.com/watch?v=NiGC1jxFx78&amp;list=PLHGgqcJIME5koI76OlBdBj7sCid1hbjf-&amp;index=3#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;struct Image{ char header[4]; int width; int height; char data[10];};int ProcessImage(char* filename){ FILE *fp; char ch; struct Image img; fp = fopen(filename, \"r\"); if (fp == NULL) { printf(\"fp == NULL\"); exit(0); } printf(\"\\n\\tHeader\\twidth\\theight\\tdata\\t\\r\\n\"); while (fread(&amp;img, sizeof(img), 1, fp) &gt; 0) { printf(\"\\n\\t%s\\t%d\\t%d\\t%s\\r\\n\", img.header, img.width, img.height, img.data); int size1 = img.width * img.height; printf(\"size1: %d \", size1); char* buff = (char*)malloc(size1); memcpy(buff, img.data, sizeof(img.data)); int size2 = img.width / img.height; printf(\"size2: %d\", size2); free(buff); if (size1 / 2 == 0) { free(buff); } } fclose(fp);}int main(int argc, char **argv){ ProcessImage(argv[1]);} B. troubleshooting for the first time sudo su rootecho core &gt;/proc/sys/kernel/core_patterncd /sys/devices/system/cpuecho performance | tee cpu*/cpufreq/scaling_governor *Ctrl + D: exit from root or refer to https://i-m.dev/posts/20191001-225746.html, https://blog.csdn.net/qysh123/article/details/114794833 export AFL_SKIP_CPUFREQ=1# or export AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1# or echo core | sudo tee /proc/sys/kernel/core_patternecho performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor","permalink":"http://mingg2333.top/2021/11/15/Fuzz/","photos":[]},{"tags":[{"name":"tool","slug":"tool","permalink":"http://mingg2333.top/tags/tool/"},{"name":"Zotero","slug":"Zotero","permalink":"http://mingg2333.top/tags/Zotero/"},{"name":"bibliography management","slug":"bibliography-management","permalink":"http://mingg2333.top/tags/bibliography-management/"}],"title":"Zotero","date":"2021/11/04","text":"Created: Mon Jul 12 10:19:53 CST 2021 Modified: 2021-11-4 22:49:06 InstallationRefer to 安装, sudo apt-add-repository ppa:smathot/cogscinlsudo apt-get updatesudo apt-get install zotero-standalonecd /optsudo chown -R root:root zotero/sudo chmod 777 zotero/cd zoterosudo chmod -R a+rx *.desktopsudo chown -R &lt;user name&gt;:&lt;user name&gt; *.desktop or use .deb file ./set_launcher_iconln -s ~/zotero/zotero.desktop ~/.local/share/applications/zotero.desktop ConfigurationRefer to 初始设定 Cloudprepare a own cloud for sync, taking Dropbox for example (installation on Ubuntu refer to How to Install and Sync DropBox on Ubuntu 18.04 LTS - VITUX, 安装Dropbox客户端 - 哈库 - 个人维基 (mywiki.cn)) Note: if you use proxy, you’d better to configure it manually in Dropbox Preferences. ConfigurationRefer to ZotFile 配合同步盘, Zotero和zotfile插件关联以及使用. From zotfile offical website download zotfile Add-ons, then install and configure it. Source folder：插件自动检索文件夹里的新增文件。 Linked files/相对路径下的文件：对应云端文件，用于Zotero的读。 Stored files：终端文件。 Operation local_clound manage attachments - rename attachments meanwhile move from local Tools - manage attachments - to stored files tablet manage attachments - send to tablet manage attachments - get from tablet with contents","permalink":"http://mingg2333.top/2021/11/04/Zotero/","photos":[]},{"tags":[],"title":"IoT","date":"2021/10/26","text":"Created: 2021-10-26 14:31:10 Modified: 2021-10-26 14:31:10 OSrefer to https://www.eet-china.com/news/202105180818.html","permalink":"http://mingg2333.top/2021/10/26/IoT/","photos":[]},{"tags":[],"title":"regular expression","date":"2021/10/21","text":"Created: 2021-10-21 15:11:41 Modified: 2021-10-21 15:11:41 common userefer to https://c.runoob.com/front-end/854/ # any character.# Chinese character[\\u4e00-\\u9fa5]# string consisting of 1-3 Chinese characters[\\u4e00-\\u9fa5]{1,3}","permalink":"http://mingg2333.top/2021/10/21/regular-expression/","photos":[]},{"tags":[{"name":"software","slug":"software","permalink":"http://mingg2333.top/tags/software/"},{"name":"tool","slug":"tool","permalink":"http://mingg2333.top/tags/tool/"},{"name":"Perl","slug":"Perl","permalink":"http://mingg2333.top/tags/Perl/"}],"title":"linear algebra","date":"2021/10/07","text":"Created: 2021-10-7 16:45 Modified: 2021-10-7 16:45 SVDhttps://bainingchao.github.io/2018/10/11/%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%95%99%E4%BD%A0%E8%BD%BB%E6%9D%BE%E5%AD%A6%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3SVD%E9%99%8D%E7%BB%B4%E7%AE%97%E6%B3%95/","permalink":"http://mingg2333.top/2021/10/07/linear-algebra/","photos":[]},{"tags":[{"name":"software","slug":"software","permalink":"http://mingg2333.top/tags/software/"},{"name":"tool","slug":"tool","permalink":"http://mingg2333.top/tags/tool/"},{"name":"Perl","slug":"Perl","permalink":"http://mingg2333.top/tags/Perl/"}],"title":"Perl","date":"2021/10/04","text":"Created: 2021-10-04 16:45 Modified: 2021-10-04 16:45 Installrefer to https://www.runoob.com/perl/perl-environment.html WindowsDownload from http://strawberryperl.com and install step-by-step. Applygdowna big files down-loader from Google Drive, for more refer to https://circulosmeos.wordpress.com/2014/04/12/google-drive-direct-download-of-big-files/. # linux# ./gdown.pl 'gdrive file url' ['desired file name']./gdown.pl https://drive.google.com/file/d/0B1L_hFrWJfRhLUJZdXdSdTdfSWs/edit axolotl.mp4# Windowsperl gdown.pl https://drive.google.com/file/d/0B1L_hFrWJfRhLUJZdXdSdTdfSWs/edit axolotl.mp4","permalink":"http://mingg2333.top/2021/10/04/Perl/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"}],"title":"ML Environment","date":"2021/09/17","text":"Created: 2021-07-04 11:18:30 Modified: Fri Sep 17 18:39:12 CST 2021 CUDA_VISIBLE_DEVICES=0 CPU/GPU/NPU supportWhat you need to install to support advanced computing depends on your hardware of device, and the requirements of machine learning library, like TensorFlow, Torch, MindSpore and so on. if use NVIDIA GPU supporting CUDA (how to choose), usually the following NVIDIA® dependencies need installed: version check, refer to https://blog.csdn.net/weixin_41803874/article/details/91913063, https://docs.nvidia.com/deploy/cuda-compatibility, https://tensorflow.google.cn/install/source#gpu. ps. cuda 10.0 seems to not support RTX30, so that use cuda 11. NVIDIA® GPU drivers. check GPU: lspci | grep 'VGA' It usually has been installed since operation system was installed. In Ubuntu, it is recommended to use GUI to install or change your GPU driver, refer to Ubuntu Linux Install Nvidia Driver (Latest Proprietary Driver) - nixCraft (cyberciti.biz), OR use terminal: # refer to https://cyfeng.science/2020/05/02/ubuntu-install-nvidia-driver-cuda-cudnn-suits/ubuntu-drivers devicessudo ubuntu-drivers autoinstall# or sudo apt install nvidia-driver-440# reboot In windows, download the installation packages from NVIDIA official website and install it. Now, if you use conda, you can just install the runtime files of cuda and cudnn, and skip the following two installation(the differences): # conda isntall `cuda` and `cudnn`, for example:conda install cudatoolkit=10.0 -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/linux-64/conda install cudnn=7.4 -c https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/linux-64/ CUDA® Toolkit. Read related software documents, like GPU support | TensorFlow (google.cn), to choose correct CUDA version. Note: you need to choose runfile packages to install old version if you use Ubuntu. For Ubuntu 18.04 LTS, refer to the CUDA installation section in Ubuntu 18.04安装CUDA和cuDNN - 知乎 (zhihu.com) and install CUDA without selecting driver component. Note that you would better to record those information. For Windows 10, you can refer to the CUDA installation section in win10安装CUDA和cuDNN的正确姿势 - 知乎 (zhihu.com). Uninstall and install CUDA refer to windows下CUDA的卸载以及安装_m0_37605642的博客-CSDN博客_cuda卸载, note that you can keep the high version of components of Display Driver, PhysX, NVIDIA GeForce Experience. Notice: do not care about the GPU drivers, you can verify CUDA firstly according to the following instructions, and if there is mismatching information printed, change your drivers later. To verify your installation: check nvcc, execute the following command line in shell: nvcc -V If there is no information printed, check your environment variables: in Ubuntu, execute the following command line in shell, refer to ubuntu－设置系统环境变量 - 简书 (jianshu.com), Environment Setup :: CUDA Toolkit Documentation (nvidia.com), Ubuntu 18.04安装CUDA和cuDNN - 知乎 (zhihu.com): echo '# CUDA' &gt;&gt; ~/.bashrcecho 'export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}' &gt;&gt; ~/.bashrcecho 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64\\${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}' &gt;&gt; ~/.bashrcsource ~/.bashrc If environment variables has been set done, CUDA Runtime version will be printed according to CUDA Runtime API, which should be not higher than CUDA Driver version, which you can look up by executing the following command line: nvidia-smipip install gpustatgpustat -i 1 -cup --force-color# watch --color -n 1 gpustat --force-color -cup if you do not get CUDA Driver version printed or your CUDA Driver version is lower than Runtime version, install or update your NVIDIA® GPU drivers according to next step. running compiled examples, in windows, refer to windows 验证CUDA和CUDNN是否安装成功 - 知乎 (zhihu.com), Installation Guide Windows :: CUDA Toolkit Documentation (nvidia.com): cd C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.1cd extras\\demo_suitedeviceQuery.exebandwidthTest.exe *v11.1 is the version of your CUDA. in Ubuntu, cd /usr/local/cuda/samples/1_Utilities/deviceQuerysudo make./deviceQuerycd ..cd bandwidthTestsudo make./bandwidthTest If Result = PASS is printed, your CUDA has been installed well, and you can skip the step of NVIDIA® GPU drivers, while if there is something wrong with mismatching between driver version and CUDA version, carry out the next step. cuDNN. Refer to https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html. Check your installation version, in windows, cd C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.1cd includecudnn_version.h in Ubuntu, cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 if use Intel iGPU/FPGA(deprecated)/VPUs/HDDL/MYRIAD/HETERO with OpenVINO, if use Huawei Ascend which supports CANN, if use AMD/ATI GPU which supports AMD-MLP, which is based on OpenCL supporting parallel computing across various devices, give it up. if use DirectML on Windows hardware include AMD, Intel and NVIDIA GPUs, refer to GPU accelerated ML training inside the Windows Subsystem for Linux - Windows Developer Blog, 直接机器学习 (DirectML) - Win32 apps | Microsoft Docs, GitHub - microsoft/DirectML, GPU with DirectML | Microsoft Docs. Refer to https://docs.microsoft.com/en-us/windows/win32/direct3d12/gpu-faq, to know how to use multiple GPUs by DirectML. if use CUDA supports a laptop with an iGPU and a dGPU running Ubuntu, refer to Installation Guide Linux :: CUDA Toolkit Documentation (nvidia.com). if use Google Cloud or kaggle, Pythoninstall python if use windows, go into Download Python | Python.org, download and install what you need; To choose which windows version, refer to python官网的几个windows版本的区别 - 简书 (jianshu.com). *suggestion: add python to PATH of environment variables;install pip. if use Ubuntu, # use source filewget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgztar -zxvf Python-3.7.5.tgzcd Python-3.7.5# --enable-loadable-sqlite-extensions if use libsqlite3-dev./configure --prefix=/usr/local/python3.7.5 --enable-sharedmakesudo make install# or use aptapt-get install python3.7#set environmental variablesvim .bashrcexport LD_LIBRARY_PATH=/usr/local/python3.7.5/lib:$LD_LIBRARY_PATHexport PATH=/usr/local/python3.7.5/bin:$PATHsource .bashrc# testpython3 --versionpip3 --version use Anaconda or Miniconda(recommended), install ML-libmachine learning libraries(frameworks) include TensorFlow, PyTorch, MindSpore and so on TensorFlow 2 if use TensorFlow 2, refer to Install TensorFlow 2 (google.cn): # Current stable release for CPU and GPUpip3 install tensorflow# Successfully installed absl-py-0.13.0 astunparse-1.6.3 cached-property-1.5.2 cachetools-4.2.2 certifi-2021.5.30 chardet-4.0.0 flatbuffers-1.12 gast-0.4.0 google-auth-1.32.0 google-auth-oauthlib-0.4.4 google-pasta-0.2.0 grpcio-1.34.1 h5py-3.1.0 idna-2.10 importlib-metadata-4.6.0 keras-nightly-2.5.0.dev2021032900 keras-preprocessing-1.1.2 markdown-3.3.4 numpy-1.19.5 oauthlib-3.1.1 opt-einsum-3.3.0 protobuf-3.17.3 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.25.1 requests-oauthlib-1.3.0 rsa-4.7.2 six-1.15.0 tensorboard-2.5.0 tensorboard-data-server-0.6.1 tensorboard-plugin-wit-1.8.0 tensorflow-2.5.0 tensorflow-estimator-2.5.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.26.6 werkzeug-2.0.1 wheel-0.36.2 wrapt-1.12.1 zipp-3.4.1 To verify your installation: python -c \"import tensorflow.compat.v1 as tf; tf.test.gpu_device_name(); tf.test.is_gpu_available()\"# ...Successfully opened dynamic library xxx For more verification, refer to Tensorflow 2环境下,程序快速测试 GPU是否安装成功_sTeven LI-CSDN博客_tensorflow2测试gpu. or install CPU version: pip3 install tensorflow-cpu# Successfully installed absl-py-0.13.0 astunparse-1.6.3 cached-property-1.5.2 cachetools-4.2.2 charset-normalizer-2.0.4 clang-5.0 flatbuffers-1.12 gast-0.4.0 google-auth-1.35.0 google-auth-oauthlib-0.4.6 google-pasta-0.2.0 grpcio-1.40.0 h5py-3.1.0 idna-3.2 importlib-metadata-4.8.1 keras-2.6.0 keras-preprocessing-1.1.2 markdown-3.3.4 numpy-1.19.5 oauthlib-3.1.1 opt-einsum-3.3.0 protobuf-3.17.3 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.26.0 requests-oauthlib-1.3.0 rsa-4.7.2 six-1.15.0 tensorboard-2.6.0 tensorboard-data-server-0.6.1 tensorboard-plugin-wit-1.8.0 tensorflow-cpu-2.6.0 tensorflow-estimator-2.6.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.26.6 werkzeug-2.0.1 wrapt-1.12.1 zipp-3.5.0 TensorFlow 1.3If you use Anaconda or the smaller Miniconda, following the steps in https://docs.anaconda.com/anaconda/user-guide/tasks/tensorflow/: conda create -n tf tensorflow=1.13conda activate tf Note that MSVC 2015 update 3 is needed as Compiler for TensorFlow 1.3, refer to https://www.tensorflow.org/install/source_windows#cpu, so you need to install the Visual Studio 2015, 2017 and 2019, refer to https://www.tensorflow.org/install/pip#system-requirements. for CPU onlypip3 install tensorflow==1.13python -c \"import tensorflow as tf; tf.test.gpu_device_name(); tf.test.is_gpu_available()\" # pyhtonimport tensorflow as tf#session = tf.Session()file_handle = tf.gfile.GFile('face_mask_detection.pb', \"rb\")graph_def = tf.GraphDef()graph_def.ParseFromString(file_handle.read())tf.import_graph_def(graph_def, name=\"net\")input_name=\"images\" {input name of model}input_var = tf.get_default_graph().get_tensor_by_name(\"net/%s:0\" % input_name)input_var.get_shape().as_list() PyTorch if use Torch, refer to PyTorch: pip3 install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio===0.9.0 -f https://download.pytorch.org/whl/torch_stable.html# Successfully installed numpy-1.21.0 pillow-8.2.0 torch-1.9.0+cu111 torchaudio-0.9.0 torchvision-0.10.0+cu111 typing-extensions-3.10.0.0 To verify your installation: python -c \"import torch; \\print(torch.__version__); \\print(torch.version.cuda); \\print(torch.backends.cudnn.version()); \\print(torch.cuda.is_available()); \\print(torch.cuda.device_count()); \\print(torch.cuda.current_device()); \\print(torch.cuda.device(0)); \\print(torch.cuda.get_device_name(0))\"# 1.9.0+cu111# 11.1 # may not consist with above# 8005# True# 1# 0# &lt;torch.cuda.device at 0x7efce0b03be0&gt;# 'GeForce GTX 950M'# refer to: https://stackoverflow.com/questions/48152674/how-to-check-if-pytorch-is-using-the-gpu For more verification, refer to pytorch：测试GPU是否可用_明月几时有，把酒问青天-CSDN博客, PyTorch_GPU加速测试_liming_2464的博客-CSDN博客. pytorch_lightninghttps://blog.csdn.net/weixin_46062098/article/details/109713240 https://zhuanlan.zhihu.com/p/157742258 https://zhuanlan.zhihu.com/p/235392539 https://zhuanlan.zhihu.com/p/319810661 MindSpore if use MindSpore, refer to MindSpore安装指南,手把手安装和体验: Before installing MindSpore, you should install GCC, refer to 如何在Ubuntu 18.04上安装GCC编译器 (linuxidc.com), Ubuntu下gcc安装及使用_lucifa_li的博客-CSDN博客_ubuntu下载gcc, and m4, sudo apt-get install m4 and gmp, refer to 安装gmp-6.1.2库 - 云+社区 - 腾讯云 (tencent.com), xz -d gmp-6.1.2.tar.xztar -xvf gmp-6.1.2.tarcd gmp-6.1.2./configure --enable-cxx --prefix=/usr/local/gmp6 --build=x86_64-linuxmakemake checksudo make install# vim ~/.bashrcexport LD_LIBRARY_PATH=/usr/local/gmp6/lib:$LD_LIBRARY_PATH# :wq# testcd ..gcc test_gmpxx.cpp -lgmp -lm -o test./test and cmake, refer to update cmake: # slowly downloadwget https://cmake.org/files/v3.21/cmake-3.21.2.tar.gz --no-check-certificatetar -zxvf cmake-3.21.2.tar.gzcd cmake-3.21.2./bootstrapmakesudo make installhash -rcmake --version then install CPU version: pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.2.1/MindSpore/cpu/windows_x64/mindspore-1.2.1-cp37-cp37m-win_amd64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed asttokens-2.0.5 cffi-1.14.5 decorator-5.0.9 easydict-1.9 mindspore-1.2.1 mpmath-1.2.1 packaging-20.9 psutil-5.8.0 pycparser-2.20 pyparsing-2.4.7 scipy-1.7.0 sympy-1.8 or install CUDA GPU version: pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.2.1/MindSpore/gpu/ubuntu_x86/cuda-10.1/mindspore_gpu-1.2.1-cp37-cp37m-linux_x86_64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed asttokens-2.0.5 astunparse-1.6.3 cffi-1.14.5 decorator-5.0.9 easydict-1.9 mindspore-gpu-1.2.1 mpmath-1.2.1 numpy-1.21.0 packaging-20.9 pillow-8.2.0 protobuf-3.17.3 psutil-5.8.0 pycparser-2.20 pyparsing-2.4.7 scipy-1.7.0 six-1.16.0 sympy-1.8 Otherwise, install Ascend 310 Linux version: # check environmental variables aheadldd --versiongcc --version# gmpcmake --versionpython3.7.5 --versionpip3.7.5 --versionpip3.7.5 install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.3.0/MindSpore/ascend/x86_64/mindspore_ascend-1.3.0-cp37-cp37m-linux_x86_64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed asttokens-2.0.5 astunparse-1.6.3 mindspore-ascend-1.3.0 packaging-21.0 protobuf-3.18.0 wheel-0.37.0 install Ascend Data Center Solution 21.0.2, inlcude driver, firmware of nnrt(neural network runtime) and toolkit(the last two are included in the insider CANN version ?), then cd ${install_path}cd ..ls -lsudo chown HwHiAiUser:HwHiAiUser Ascendpip3.7.5 install ${install_path}/fwkacllib/lib64/topi-0.4.0-py3-none-any.whlpip3.7.5 install ${install_path}/fwkacllib/lib64/te-0.4.0-py3-none-any.whl# add environmental variables# control log level. 0-DEBUG, 1-INFO, 2-WARNING, 3-ERROR, default level is WARNING.export GLOG_v=2# lib libraries that the mindspore depends on, modify \"pip3\" according to the actual situationexport LD_LIBRARY_PATH=`pip3.7.5 show mindspore-ascend | grep Location | awk '{print $2\"/mindspore/lib\"}' | xargs realpath`:${LD_LIBRARY_PATH} Optional: install MindInsight: pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.2.0/MindInsight/ascend/ubuntu_x86/mindinsight-1.2.0-cp37-cp37m-linux_x86_64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed Click-8.0.1 Flask-2.0.1 Flask-Cors-3.0.10 Jinja2-3.0.1 MarkupSafe-2.0.1 Werkzeug-2.0.1 future-0.18.2 google-pasta-0.2.0 grpcio-1.38.1 gunicorn-20.1.0 importlib-metadata-4.6.0 itsdangerous-2.0.1 joblib-1.0.1 marshmallow-3.12.1 mindinsight-1.2.0 pandas-1.3.0 python-dateutil-2.8.1 pytz-2021.1 pyyaml-5.4.1 scikit-learn-0.24.2 threadpoolctl-2.1.0 treelib-1.6.1 typing-extensions-3.10.0.0 yapf-0.31.0 zipp-3.4.1 install MindArmour: pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.2.0/MindArmour/x86_64/mindarmour-1.2.0-cp37-cp37m-linux_x86_64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed cycler-0.10.0 kiwisolver-1.3.1 matplotlib-3.4.2 mindarmour-1.2.0 install MindSpore Hub: Download .whl file from MindSpore Hub下载页面, then pip install mindspore_hub-1.2.0-py3-none-any.whl# Successfully installed mindspore-hub-1.2.0 mistune-0.8.4 OpenVINO if use OpenVINO, refer to Intel® Distribution of OpenVINO™ Toolkit. There are several requirements, like cmake if you use Windows 10 OS. You need to set the related environment variables: conda create -n openvino python=3.7conda activate openvino\"E:\\Program Files (x86)\\Intel\\openvino_2021\\bin\\setupvars.bat\"# Python 3.7.11# [setupvars.bat] OpenVINO environment initialized Then you need to configure the Model Optimizer: cd /d E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\model_optimizer\\install_prerequisites# the Internet access is required for the next stepinstall_prerequisites.bat# WARNING: The script normalizer.exe is installed in '~\\AppData\\Roaming\\Python\\Python37\\Scripts' which is not on PATH.# Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.# Successfully installed absl-py-0.13.0 astunparse-1.6.3 cachetools-4.2.2 charset-normalizer-2.0.4 defusedxml-0.7.1 flatbuffers-1.12 gast-0.3.3 google-auth-1.35.0 google-auth-oauthlib-0.4.6 google-pasta-0.2.0 graphviz-0.17 grpcio-1.32.0 h5py-2.10.0 idna-3.2 importlib-metadata-4.8.1 keras-preprocessing-1.1.2 markdown-3.3.4 mxnet-1.2.0 networkx-2.6.2 numpy-1.19.5 oauthlib-3.1.1 onnx-1.10.1 opt-einsum-3.3.0 protobuf-3.17.3 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.26.0 requests-oauthlib-1.3.0 rsa-4.7.2 six-1.15.0 tensorboard-2.6.0 tensorboard-data-server-0.6.1 tensorboard-plugin-wit-1.8.0 tensorflow-2.4.3 tensorflow-estimator-2.4.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.26.6 werkzeug-2.0.1 wrapt-1.12.1 zipp-3.5.0#- Inference Engine found in: E:\\Program Files (x86)\\Intel\\openvino_2021\\python\\python3.7\\openvino# Inference Engine version: 2021.4.0-3839-cd81789d294-releases/2021/4# Model Optimizer version: 2021.4.0-3839-cd81789d294-releases/2021/4# *****************************************************************************************# Optional: To speed up model conversion process, install protobuf-*.egg located in the# \"model-optimizer\\install_prerequisites\" folder or building protobuf library from sources.# For more information please refer to Model Optimizer FAQ, question #80.# or install for one like tf2install_prerequisites_tf2.bat For advanced configuration for Model Optimizer, refer to Installing Model Optimizer Pre-Requisites and Model Optimizer Developer Guide. If you want to compute on iGPU, you can install the Intel Graphics Driver ahead. To use demo of OpenVINO, refer to Get Started Guide for Windows. There are some demos, for more refer to Inference Engine Samples and Demo Applications: conda activate openvino\"E:\\Program Files (x86)\\Intel\\openvino_2021\\bin\\setupvars.bat\"cd /d E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\demo.\\demo_squeezenet_download_convert_run.bat.\\demo_security_barrier_camera.bat -d GPU.\\demo_benchmark_app.bat -d GPU To use OpenVINO with its workflow, refer to OpenVINO™ Toolkit Overview and Learn the Workflow, # pythonfrom os import pathfrom openvino.inference_engine import IECoreie = IECore()model = '{path of model}'net = ie.read_network(model, path.splitext(model)[0] + \".bin\")# assert len(net.input_info) == {}, \"Demo supports {} input topologies\"# assert len(net.outputs) == {}, \"Demo supports {} output topologies\"# next(iter(net.input_info))# sorted(net.outputs)net.outputs.keys()net.outputs[{name}].shapenet.input_info[{name}].input_data.shape There are more information with API and Data Structures. To download public model and run Model Optimizer: # Download public squeezenet1.1 modelpython \"E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\open_model_zoo\\tools\\downloader\\downloader.py\" ^--name \"squeezenet1.1\" ^--output_dir \"~\\Documents\\Intel\\OpenVINO\\openvino_models\\models\" ^--cache_dir \"~\\Documents\\Intel\\OpenVINO\\openvino_models\\cache\"# Run Model Optimizer, Converting squeezenet1.1 to IR (FP16)python \"E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\open_model_zoo\\tools\\downloader\\converter.py\" ^--mo \"E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\model_optimizer\\mo.py\" ^--name \"squeezenet1.1\" ^-d \"~\\Documents\\Intel\\OpenVINO\\openvino_models\\models\" ^-o \"~\\Documents\\Intel\\OpenVINO\\openvino_models\\ir\" ^--precisions \"FP16\"# orpython \"E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\model_optimizer\\mo.py\" ^--framework=caffe ^--data_type=FP16 ^--output_dir=~\\Documents\\Intel\\OpenVINO\\openvino_models\\ir\\public\\squeezenet1.1\\FP16 ^--model_name=squeezenet1.1 ^--input_shape=[1,3,227,227] ^--input=data ^--mean_values=data[104.0,117.0,123.0] ^--output=prob ^--input_model=~\\Documents\\Intel\\OpenVINO\\openvino_models\\models\\public\\squeezenet1.1/squeezenet1.1.caffemodel ^--input_proto=~\\Documents\\Intel\\OpenVINO\\openvino_models\\models\\public\\squeezenet1.1/squeezenet1.1.prototxt To generate VS solution for Inference Engine samples using cmake: Creating Visual Studio 16 2019 x64 files in ~\\Documents\\Intel\\OpenVINO\\inference_engine_samples_build...-- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19043.-- The C compiler identification is MSVC 19.29.30040.0-- The CXX compiler identification is MSVC 19.29.30040.0-- Detecting C compiler ABI info-- Detecting C compiler ABI info - done-- Check for working C compiler: E:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped-- Detecting C compile features-- Detecting C compile features - done-- Detecting CXX compiler ABI info-- Detecting CXX compiler ABI info - done-- Check for working CXX compiler: E:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped-- Detecting CXX compile features-- Detecting CXX compile features - doneCMake Warning (dev) at thirdparty/cnpy/CMakeLists.txt:11 (if): Policy CMP0054 is not set: Only interpret if() arguments as variables or keywords when unquoted. Run \"cmake --help-policy CMP0054\" for policy details. Use the cmake_policy command to set the policy and suppress this warning. Quoted variables like \"MSVC\" will no longer be dereferenced when the policy is set to NEW. Since the policy is not set the OLD behavior will be used.This warning is for project developers. Use -Wno-dev to suppress it.-- Configuring done-- Generating done-- Build files have been written to: ~/Documents/Intel/OpenVINO/inference_engine_samples_build To build Inference Engine samples using MS Visual Studio (MSBuild.exe): \"E:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\MSBuild.exe\" Samples.sln /p:Configuration=Release /t:cpp_samples\\classification_sample_async /clp:ErrorsOnly /m# 用于 .NET Framework 的 Microsoft (R) 生成引擎版本 16.10.2+857e5a733# 版权所有(C) Microsoft Corporation。保留所有权利。 To run Inference Engine classification sample: \"~\\Documents\\Intel\\OpenVINO\\inference_engine_samples_build\\intel64\\Release\\classification_sample_async.exe\" ^-i \"E:\\Program Files (x86)\\Intel\\openvino_2021\\deployment_tools\\demo\\car.png\" ^-m \"~\\Documents\\Intel\\OpenVINO\\openvino_models\\ir\\public\\squeezenet1.1\\FP16\\squeezenet1.1.xml\" ^-d CPU Optinal: Use OpenVINO™ Deep Learning Workbench Overview. Use Post-Training Optimization Tool. Kerastroubleshooting: original_keras_version = f.attrs['keras_version'].decode('utf8')AttributeError: 'str' object has no attribute 'decodepip install h5py==2.10 -i https://pypi.tuna.tsinghua.edu.cn/simple/ NVIDIA GPUset for computing only: https://blog.csdn.net/ZIV555/article/details/51755096; https://blog.csdn.net/Santo_Wong_94/article/details/50735418 AMD CPUhttps://www.techradar.com/news/amd-ryzen-threadripper-vs-epyc-what-should-professionals-use # desktophttps://www.amd.com/zh-hans/products/ryzen-threadripper","permalink":"http://mingg2333.top/2021/09/17/ai-env/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"}],"title":"shared documents","date":"2021/09/17","text":"Created: 2021-07-04 11:18:30 Modified: shimotencentgooglesupport initiative application feishusupport controllable anonymity","permalink":"http://mingg2333.top/2021/09/17/shared-documents/","photos":[]},{"tags":[],"title":"ascend","date":"2021/09/10","text":"Created: 2021-06-07 00:29:11 Modified: 2021-09-10 10:31 use ascend quickly seepython -c \"import mindspore;print(mindspore.__version__)\" import mindsporefrom mindspore import contextfrom mindspore.context import ParallelMode# data parallel - training data divided# after BP: AllReducecontext.set_auto_parallel_context(parallel_mode=ParallelMode.DATA_PARALLEL)# op level model parallelself.matmul=ops.MatMul().shard(((1,2),(2,1)))c=self.matmul(A,B)context.set_auto_parallel_context(parallel_mode=ParallelMode.SEMI_AUTO_PARALLEL)context.set_auto_parallel_context(parallel_mode=ParallelMode.AUTO_PARALLEL)self.matmul=ops.MatMul.set_strategy({[4,1],[1,1]})c=self.matmul(A,B)context.set_auto_parallel_context(parallel_mode=ParallelMode.SEMI_AUTO_PARALLEL)# pipline level model parallel# I think it is better that all of the pieces of pipline occupy the same time of calculation.self.subnet1 = subnet().pipeline_stages(0)self.subnet2 = subnet().pipeline_stages(1)x = self.subnet1(x)x = self.subnet2(x)context.set_auto_parallel_context(pipeline_stages=2)# Rematerialization -- reduce the ocupation of training data in DRAM# there is gradient value produced in DRAM too# there are weight and other parameter(like EMA for optimizer) stored in SRAMx = self.net1(x)self.net1.recompute() # ?x = self.net2(x)x = self.net1(x)self.net1.recompute()x = self.net2(x)# data parallel - parameter shard -- divide parameter of inner layers into SRAMs# befor FP: AllGether# after BP: ReduceScatter# example: fusion every 10 layers of transformer for OpenAI - gpt3for i in range(config.num_layers): self.blocks.append(Block(config, i+1)).set_comm_fusion(int(i/10)+2)context.set_auto_parallel_context(enable_parallel_optimizer=True,parallel_mode=ParallelMode.DATA_PARALLEL) ModelArts useguidelocal code in PC -&gt; cloud code in obs -&gt; my ModelArts algorithm /algorithm subscribed in AI Gallery -&gt; Training Jobs -&gt; local dataset in PC/cloud dataset in AI Gallery -&gt; cloud dataset in obs-&gt; Training Jobs -&gt; -&gt; output in Training Jobs -&gt; output in obs local codeaccording to PyCharm with the Plugin of ModelArts: online traininglocal code in PC -&gt; cloud code in obs -&gt; my ModelArts algorithm -&gt; Training Jobs -&gt; output in Training Jobs -&gt; output in obs =&gt; local code in PC -&gt; the whole job &amp; log in PyCharm what you need to install are 3 items, refer to https://support.huaweicloud.com/bestpractice-modelarts/modelarts_10_0021.html: install the Plugin of ModelArts; create the Access Key and set it for your ModelArts(you can still use the Agency type Authorization if existing), refer to 获取访问密钥; set it for the Plugin of ModelArts, refer to 使用访问秘钥登录. PyCharmcreate and open one on Notebook -&gt; remote configure on PyCharm -&gt; restart and wait -&gt; enter remote interpreter environment opening a script(connecting to remote host) -&gt; upload files(synch and auto-upload files) -&gt; wait a while(after index files) and then open requirements.txt and install dependency -&gt; open terminal -&gt; cd work/pangu_alpha -&gt; ls -&gt; python src/preprocess.py -&gt; bash myrun.sh -&gt; debug train.py（trial） Update the whitelist of Notebook -&gt; connect in PyCharm-&gt; (tool-deployment) -&gt; (change remote host) enter remote interpreter environment opening a script -&gt; upload files(synch and auto-upload files) -&gt; wait a while(after index files) and then open requirements.txt and install dependency -&gt; open terminal -&gt; cd work/PanguGit-&gt; ls -&gt; python src/preprocess.py -&gt; bash myrun.sh -&gt; (configure first, like python interpreter)run train.py Test, refer to https://bbs.huaweicloud.com/forum/thread-133615-1-1.html: ssh ma-user@dev-modelarts-cnnorth4.huaweicloud.com -p 31261 -i .ssh/KeyPair-remote-dev.pempython -c \"import mindspore;print(mindspore.__version__)\"exit VS Coderefer to 配置本地IDE（VSCode手动连接）. Firstly, make sure you use VSCode 1.57.1 with Extensions installed including Python and Remote-SSH, create a Notebook with SSH and prepare a pair of SSH key of Huawei Cloud. Host {name of Notebook1} HostName 114.116.242.242 Port {Port of Notebook1} User ma-user IdentityFile ~\\.ssh\\KeyPair-xxx.pem UserKnownHostsFile=/dev/null StrictHostKeyChecking noHost {name of Notebook2} HostName dev-modelarts-cnnorth4.huaweicloud.com Port {Port of Notebook2} User ma-user IdentityFile ~\\.ssh\\KeyPair-xxx.pem UserKnownHostsFile=/dev/null StrictHostKeyChecking no Ensure consistency between Nootbook and config file(Host, Port, path of key pair in particular) -&gt; make sure Remote-SSH configured -&gt; Update the whitelist of IP and open Notebook -&gt; click the button of Connect to Host in New Window in vscode and wait a while(download VS Code server and copy it to host with scp) -&gt; use VS Code server like a New one (install Extensions of VS code -&gt; manage Folder in Cloud(drag and drop files from PC) -&gt; Select Interpreter of Python (need to open a py file first in vscode) -&gt; open New Terminal -&gt; run and debug) -&gt; close the Romote Connection and stop Notebook: Note that you may want to disable the software update: local datasetlocal dataset in PC -&gt; cloud dataset in obs-&gt; use OBS Browser+ or obsutil to make it easily. local development with SDKuse ModelArts SDK, refer to https://support.huaweicloud.com/sdkreference-modelarts/modelarts_04_0002.html there is only python package version. python packagefrom modelarts.session import Sessionsession = Session(access_key='***',secret_key='***', project_id='***', region_name='cn-north-4')session.obs.upload_file(src_local_file='/home/ma-user/file1.txt', dst_obs_dir='obs://bucket-name/dir1/')session.obs.upload_dir(src_local_dir='/home/ma-user/', dst_obs_dir='obs://bucket-name/dir1/')session.obs.download_file(src_obs_file=\"obs://bucket-name/dir1/file1.txt\", dst_local_dir=\"/home/ma-user/\")session.obs.download_dir(src_obs_dir=\"obs://bucket-name/dir1/\", dst_local_dir=\"/home/ma-user/\") Note: it seems not to support \\ of path of Windows. and there is something wrong with dir operation? CANNrefer to CANN社区版安装指南(5.0.3.alpha002), Prepare your devices including both hardware and software ahead. For example, you can [rent a server and run an Image in Huawei Cloud](#Ascend in Huawei Cloud). (optional)Create and substitute with a User for installation or running, or use an image with user created in the step 1. Install and check dependency of apt and pip and firmware with root right, or use an image with dependency and firmware installed in the step 1. What’s more, Besides, add environmental variables: # in ~/.bashrcexport LD_LIBRARY_PATH=/usr/local/python3.7.5/lib:$LD_LIBRARY_PATHexport PATH=/usr/local/python3.7.5/bin:$PATH For firmware of Driver, # dowaload beforechmod +x A*su./A300-3010-npu-driver_21.0.2_linux-x86_64.run --full# install in /usr/local/Ascendreboot Prepare the .run package of CANN to the device and then install it. In insider version you can use command line to download and install it. The default installation path is /usr/local/Ascend or ~/Ascend. validated the environmental variables of CANN source ${install_path}/bin/setenv.bashsource ~/.bashrc # farther# 存在多个python版本时，需要指定为python3.7.5的安装路径，请根据实际情况修改export PATH=/usr/local/python3.7.5/bin:$PATH# for non-root userexport install_path=~/Ascend# for root userexport install_path=/usr/local/Ascend# ascend driverexport a_driver_path=/usr/local/Ascend/driver# 加载Driver的so文件存在路径export LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common/:/usr/local/Ascend/driver/lib64/driver:$LD_LIBRARY_PATH# Runtime使用到的so文件存在路径# 如环境中存在Driver，则配置如下。export LD_LIBRARY_PATH=${install_path}/runtime/lib64:$LD_LIBRARY_PATH# 如环境中不存在Driver，则配置如下。export LD_LIBRARY_PATH=${install_path}/runtime/lib64:$LD_LIBRARY_PATH:${install_path}/runtime/lib64/stub# Compiler使用的python路径export PYTHONPATH=${install_path}/compiler/python/site-packages:$PYTHONPATH# 如果用户环境存在多个python3版本，则指定使用python3.7.5版本，python3.7.5安装路径请根据实际情况进行替换；同时设置ATC工具可执行文件所在路径export PATH=/usr/local/python3.7.5/bin:${install_path}/compiler/ccec_compiler/bin:${install_path}/compiler/bin:$PATH# Compiler的库文件存在路径export LD_LIBRARY_PATH=${install_path}/compiler/lib64:${install_path}/compiler/lib64/plugin/opskernel:${install_path}/compiler/lib64/plugin/nnengine:${install_path}/compiler/lib64/stub# FwkPlugin使用的python路径export PYTHONPATH=${install_path}/fwkplugin/python/site-packages:$PYTHONPATH# Toolkit使用的python路径export PYTHONPATH=${install_path}/toolkit/python/site-packages:$PYTHONPATHexport TOOLCHAIN_HOME=${install_path}/toolkit# 算子库根目录export ASCEND_OPP_PATH=${install_path}/opp#AI CPU组件的安装路径export ASCEND_AICPU_PATH=${install_path}/ Ascend in Huawei Cloudrefer to https://support.huaweicloud.com/ecs/index.html remote login with a software in PC, like Termius in Mac OS, MobaXterm in Windows, articles about MobaXterm: MobaXterm技巧, Note that it is supported to drag and drop files from PC. MindSpore installationMake sure dependency installed first, refer to MindSpore安装指南, ML environment. Taking the installation of MindSpore 1.2 on Ubuntu-x86(GPU CUDA 10.1) for example, only one line refer to MindSpore安装指南: pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.2.1/MindSpore/gpu/ubuntu_x86/cuda-10.1/mindspore_gpu-1.2.1-cp37-cp37m-linux_x86_64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple# Successfully installed asttokens-2.0.5 astunparse-1.6.3 cffi-1.14.5 decorator-5.0.9 easydict-1.9 mindspore-gpu-1.2.1 mpmath-1.2.1 numpy-1.21.0 packaging-20.9 pillow-8.2.0 protobuf-3.17.3 psutil-5.8.0 pycparser-2.20 pyparsing-2.4.7 scipy-1.7.0 six-1.16.0 sympy-1.8 Check your installation: pip show mindspore-gpu# Name: mindspore-gpu# Version: 1.2.1# Summary: MindSpore is a new open source deep learning training/inference framework that could be used for mobile, edge and cloud scenarios.# Home-page: https://www.mindspore.cn# Author: The MindSpore Authors# Author-email: contact@mindspore.cn# License: Apache 2.0# Location:# Requires: cffi, sympy, protobuf, scipy, setuptools, astunparse, easydict, wheel, psutil, packaging, numpy, decorator, asttokens, pillow# Required-by: python -c \"import mindspore;print(mindspore.__version__)\"# 1.2.1 Test 1: import numpy as npimport mindspore.context as contextimport mindspore.nn as nnfrom mindspore import Tensorfrom mindspore.ops import operations as Pcontext.set_context(mode=context.GRAPH_MODE, device_target=\"GPU\")class Mul(nn.Cell): def __init__(self): super(Mul, self).__init__() self.mul = P.Mul() def construct(self, x, y): return self.mul(x, y)x = Tensor(np.array([1.0, 2.0, 3.0]).astype(np.float32))y = Tensor(np.array([4.0, 5.0, 6.0]).astype(np.float32))mul = Mul()print(mul(x, y))# [4.0, 10.0, 18.0] Test 2: import numpy as npfrom mindspore import Tensorimport mindspore.ops as opsimport mindspore.context as contextcontext.set_context(device_target=\"GPU\")x = Tensor(np.ones([1,3,3,4]).astype(np.float32))y = Tensor(np.ones([1,3,3,4]).astype(np.float32))print(ops.add(x, y))# [[[ 2. 2. 2. 2.],# [ 2. 2. 2. 2.],# [ 2. 2. 2. 2.]],# [[ 2. 2. 2. 2.],# [ 2. 2. 2. 2.],# [ 2. 2. 2. 2.]],# [[ 2. 2. 2. 2.],# [ 2. 2. 2. 2.],# [ 2. 2. 2. 2.]]] Test 3: refer to 体验快速入门, git clone https://gitee.com/mindspore/docs.gitcd docsgit checkout r1.2 Euler OS# check your systemuname -a# Linux notebook-c4f2050c-c720-44cd-a6bc-ca40ad2e7bfd 3.10.0-862.14.1.5.h328.eulerosv2r7.x86_64 #1 SMP Mon Jul 22 00:00:00 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux# oruname -r# 3.10.0-862.14.1.5.h328.eulerosv2r7.x86_64# unavailableexport HELLO=\"Hello!\" Mind Studiorefer to 昇腾CANN训练营-应用营第一讲——开发&amp;运行环境部署 (0:46:36). MindX SDKhttps://education.huaweicloud.com/courses/course-v1:HuaweiX+CBUCNXA042+Self-paced/about?isAuth=0&amp;cfrom=hwc 7个API","permalink":"http://mingg2333.top/2021/09/10/hiascend/","photos":[]},{"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://mingg2333.top/tags/ubuntu/"},{"name":"new machine","slug":"new-machine","permalink":"http://mingg2333.top/tags/new-machine/"}],"title":"ubuntu","date":"2021/08/26","text":"Created: 2021-07-02 21:51:30 Modified: 2021-08-26 22:44 use Ctrl + T to open CLI. Systemcheck your system, refer to https://www.huaweicloud.com/articles/1d7ee487bde77c3df14d144f4c0c136c.html cat /etc/*release &amp;&amp; uname -muname -a# number of CPUs, cpu cores, logic processors, typecat /proc/cpuinfo| grep \"physical id\"| sort| uniq| wc -lcat /proc/cpuinfo| grep \"cpu cores\"| uniqcat /proc/cpuinfo| grep \"processor\"| wc -lcat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c User# show all userscat /etc/passwd# current userwhoami# change user password# for the first time to `sudo passwd`, current root password is the installation user password, valid after restart PCsudo passwd [root]passwd [current user]# su: substitute user, use `man su` for more helpsu [root]su - [root]sudo su root# Linux中创建非root用户，并授权对某个应用的操作权限，https://blog.csdn.net/panchang199266/article/details/86765007# 以root用户来创建新的用户 ， groupadd 添加一个用户组[root@localhost home]# groupadd elk# 添加一个用户，-g是在用户组下 -p是密码[root@localhost home]# useradd elk -g elk -p elk# 进入es的安装目录[root@localhost home]# cd /home/elasticsearch # 给用户elk授权[root@localhost home]# chown -R elk:elk elasticsearch-6.3.1/# 切换到 elk用户[root@localhost elasticsearch]# su elk# add to sudo group# su# vi /etc/sudoers# wq! related: Linux下修改用戶模式（usermod，sudo權限等）. rootSourceaptsucdcd /etc/aptllvim sources.listcp sources.list sources.list.bak&gt;sources.listvim sources.list pipcdmkdir .pipcd .pipvim pip.confcd pip source: https://support.huaweicloud.com/instg-cli-cann503-alpha002/atlasdeploy_03_0071.html#ZH-CN_TOPIC_0000001197460367 Install dependencyofflineyou can install some basic tools or libraries offline by using Ubuntu installation file, like ubuntu-18.04.5-desktop-amd64.iso, refer to Ubuntu-离线安装基本依赖（gcc、make、dkms等）_快乐学术猿-CSDN博客_ubuntu安装dkms. sudo dpkg -i ***.deb Notice: not suggested because of the old versions and special installation order. onlinesudo apt-get updatesudo apt-get upgradesudo apt install build-essentialsudo apt --fix-broken installpip3 install --upgrade pip hosts and proxyfor faster access local siterefer to ubuntu加速github - Jarvis_Xu - 博客园 (cnblogs.com), search DNS of github.global.ssl.fastly.net and assets-cdn.github.com in http://tool.chinaz.com/dns/. sudo gedit /etc/hosts# search one by one and modify the file# after modifying/etc/init.d/networking restart systemuse clash for Linux: A rule-based tunnel in Go. Using the following instruments, download and extract software clash from Releases · clash, and move the executable file to be customized /usr/local/bin/clash, then execute it to automatically get ~/.config/clash and two configuration file in it. export VERSION_CLASH=v1.6.5export CLash_VERSION=clash-linux-amd64-${VERSION_CLASH}wget https://github.com/Dreamacro/clash/releases/download/${VERSION_CLASH}/${CLash_VERSION}.gzlssudo gzip -d ${CLash_VERSION}.gzexport CLASH=/usr/local/bin/clashsudo mv ${CLash_VERSION} ${CLASH}sudo chmod +x ${CLASH}# run clash to create a default ~/.config/clash/sudo ${CLASH}cd ~/.config/clashls Press Ctrl + C to stop clash. Notice: you can build locally referring to Home · Dreamacro/clash Wiki · GitHub. Update your own config.yaml to ~/.config/clash/config.yaml, export CLASH_URL={your own subscription address}sudo wget --no-check-certificate -O ~/.config/clash/config.yaml ${CLASH_URL}# or# curl -L -o ~/.config/clash/config.yaml ${CLASH_URL}# or, refer to https://blog.csdn.net/Undefinedefity/article/details/117171436# curl -H \"User-Agent: ClashX/1.20.4.1\" https://*****.yaml &gt; config.yaml Optional: you can update the ~/.config/clash/Country.mmdb too, use the following command lines or download from GeoLite2-Country.mmdb · Gitee 极速下载/Pingtunnel - Gitee.com. export Countrymmdb_URL=https://www.sub-speeder.com/client-download/Country.mmdb&gt;# orexport Countrymmdb_URL=https://whiter.cc/cached-apps/linux/Country.mmdbwget --no-check-certificate -O ~/.config/clash/Country.mmdb ${Countrymmdb_URL} Configure Ubuntu system proxy responding to ~/.config/clash/config.yaml, gedit ~/.config/clash/config.yaml suggest to use GUI in Settings -&gt; Network -&gt; Network Proxy -&gt; Manual, or use shell command lines referring to Linux下安装&amp;配置Clash以实现代理上网 - 知乎 (zhihu.com). Configure clash in external controller with a browser, refer to Clash For Linux 安装及使用. Set automatical action, like Boot and Update. you can refer to 在 Ubuntu 上使用 clash 代理工具_dongheli的专栏-CSDN博客, Ubuntu 18.04 使用clash_Undefinedefity的博客-CSDN博客, and Linux下安装&amp;配置Clash以实现代理上网 - 知乎 (zhihu.com). Some frequent usage: systemctl status clashsystemctl start clashsystemctl kill clash Notice: if you plan to write a systemd unit .service yourself, you need to put it at /lib/systemd/system on Ubuntu and use an absolute path to an executable or a simple file name without any slashes while writing ExecStart=, for example you cannot use ~, refer to systemd.service (www.freedesktop.org). Besides, you must use systemctl daemon-reload in shell to make changes and modification of .service valid, refer to How to Manage ‘Systemd’ Services and Units Using ‘Systemctl’ in Linux (tecmint.com) and 技术|systemctl 命令完全指南 (linux.cn). Otherwise, you can use a native software Startup Application, refer to Ubuntu 18.04 使用clash_Undefinedefity的博客-CSDN博客. echo ${CLASH} set for terminal export http_proxy=http://127.0.0.1:7890export https_proxy=http://127.0.0.1:7890 Notice: if your system time is not correct, there would be something wrong with clash. shellhow to execute .sh file, refer to ubuntu执行.sh文件几种方式区别_yao伟斌-CSDN博客. command lines syntax, echo和Shell特殊变量：Shell $0, $#, $*, $@, $?, $$和命令行参数_weixin_33890499的博客-CSDN博客. apt-getsudo apt updatesudo apt-get install git# refer to https://gauliang.github.io/blog/2020/how-to-install-java-with-apt-get-on-ubuntu/sudo apt install default-jre refer to 2020最详细安装Ubuntu指南 - 知乎 (zhihu.com), ubuntu新安装完成后配置_sinat_40025092的博客-CSDN博客, chmod# Executable permissionchmod +x A* lnln -s {src} {des} tar gz tgzrefer to Ubuntu 常用解压与压缩命令_songbinxu的博客-CSDN博客_ubuntu zip, # .tgz &amp; .tar.gz tar -zxvf FileName.tar.gz -C DesDirName# .zipunzip FileName.zip -d DesDirNamezip -r FileName.zip srcName# .tartar -xvf FileName.tar# .gzgunzip FileName.gz makefilerefer to MakeFile 文件的使用 - CTHON - 博客园 (cnblogs.com), Makefile的使用方法 - linqiaozhou - 博客园 (cnblogs.com), https://www.jianshu.com/p/c70afbbf5172: ./configure --prefix=/usrmakesudo make install directory storepwdmkdirrm -rfrm -rf {directory name}/*# Ubuntu查看文件大小或文件夹大小du -lh --max-depth=1ls -l filenamedu -sh filename# 查看磁盘的使用情况命令：df -h swaprefer to https://zhuanlan.zhihu.com/p/399986218, Linux环境下swap配置方法 - 腾讯云开发者社区-腾讯云 # check swap and diskfree -hdf -h# create swapfile which occupys disk, e.g. 64GBdd if=/dev/zero of=/var/swapfile bs=1M count=65536mkswap /var/swapfileswapon /var/swapfileswapon -s# open /etc/fstabvim /etc/fstab# add following at last:/var/swapfile swap swap defaults 0 0# check swappinesscat /proc/sys/vm/swappiness filerefer to Linux vi/vim | 菜鸟教程 (runoob.com), linux下的Source命令的基本功能_百度知道 (baidu.com), touchvim# d delet linesourcerm -rf ./cat treesudo apt-get install treetree . process# refer to https://blog.csdn.net/andy572633/article/details/7211546ps -aux | grep 46730ps -feps -ef | grep cyber_monitor{name of process}pgrep {name of process}kill {PID of process}kill -s 9 {PID of process}pkill - 9 {name of process} nohup# https://www.runoob.com/linux/linux-comm-nohup.html# https://blog.51cto.com/u_15088375/3247580nohup /root/runoob.sh &amp;nohup /root/runoob.sh &gt; runoob.log 2&gt;&amp;1 &amp;ps -aux | grep \"runoob.sh\" # ps -def | grep \"runoob.sh\"kill -9 进程号PID cpu# refer to https://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316399.htmltop Environment Variablesrefer to ubuntu－设置系统环境变量 - 简书 (jianshu.com), IPifconfig -a PORTlsof -a -i4 -i6 -itcplsof -i TCP:2000 systemsudo vim ~/.bashrc driverubuntu-drivers devicessudo ubuntu-drivers autoinstall ssh# refer to https://bicmr.pku.edu.cn/~wenzw/pages/filetransfer.html# sshfs, refer to https://cloud.tencent.com/developer/article/1168897sudo apt install sshfsmkdir ~/workstationsshfs username@ip_address: ~/workstationfusermount -u workstation# scpscp file username@ip_address:Documents/scp -rf folder username@ip_address: rootrefer to ubuntu18.04获取root权限并用root用户登录 - 不妨不妨，来日方长 - 博客园 (cnblogs.com), Sharingsetting -&gt; privacy -&gt; screen lock refer to Ubuntu20.04 桌面共享 - Beavan - 博客园 (cnblogs.com), Win10远程桌面Ubuntu20.04 - 掘金 (juejin.cn). # 1 screen sharing in setting, if no setting install vinosudo apt install vino# 2 dconf-editor-&gt;org-&gt;gnome-&gt;desktop-&gt;remote access-&gt;require encrytion: turn offsudo apt install xrdp dconf-editor# 3 login using IP, tool.lu/ip/ Application# refer to https://code.visualstudio.com/docs/setup/linux# install deb filesudo apt install ./&lt;file&gt;.deb# If you're on an older Linux distribution, you will need to run this instead:sudo dpkg -i &lt;file&gt;.deb# Install dependenciessudo apt-get install -f language click https://pinyin.sogou.com/linux/?r=pinyin to download and install sogou. Note that you must use fcitx if you use sogou, refer to https://pinyin.sogou.com/linux/help.php. editor use Typora to editor markdown, for configuration refer to http://mingg2333.top/2021/07/06/Typora/. use vim sudo apt-get install vim for code, use VS code, if it is too slow to download the software done, refer to https://zhuanlan.zhihu.com/p/112215618. browserDownload deb from https://www.google.cn/chrome/. network diskDownload deb from https://www.dropbox.com/install. Note that you need to install Dropbox Headless manually if there are something wrong with access to Dropbox website. other tool install Git, sudo apt-get install git For create ssh key, refer to https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh, then you can configure for it in Keys for Github or Keys for Gitee. And you can configure for your Git refering to http://mingg2333.top/2021/07/29/git/. for making video, sudo apt install ffmpeg refer to https://www.liangye.site/2019/01/22/python-animation/. screen recorder. sudo apt install kazam refer to https://itsfoss.com/best-linux-screen-recorders/ local netshare folderrefer to https://content.jianguoyun.com/32175.html.","permalink":"http://mingg2333.top/2021/08/26/ubuntu/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"}],"title":"AI Model","date":"2021/08/19","text":"Created: 2021-08-19 10:14 Modified: 2021-08-19 10:14 机器学习方法和统计知识线性模型, 贝叶斯，决策树，EM算法，支持向量机等 决策树、支持向量机、线性回归、逻辑斯谛回归以及深度学习算法 LR、xgboost、随机森林、纵向，横向联邦学习算法 LR、SVM、GBDT、kMeans、RF CNN、RNN、LSTM、BERT、GAT （逻辑回归、SVM、决策树、贝叶斯） 推荐算法lightgbm、xgboost、LR、FM、deepFM、 排序模型LR、FM、DNN、GBDT 时间序列模型和图网络模型RNN/LSTM，GCN NLPTransformer、GPT、BERT、NER和RNN、LSTM等","permalink":"http://mingg2333.top/2021/08/19/AI-Model/","photos":[]},{"tags":[{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"}],"title":"CV","date":"2021/08/03","text":"backbone-head CNNVision Transformerrefer to https://zhuanlan.zhihu.com/p/349315675, https://zhuanlan.zhihu.com/p/336912362.","permalink":"http://mingg2333.top/2021/08/03/CV/","photos":[]},{"tags":[{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"}],"title":"NLP","date":"2021/08/03","text":"RNN Word Embeddingshttps://bobondemon.github.io/2017/09/07/Word-Embeddings-and-Encoder-Decoder-Neural-Net/ CBOW、Skip-Gram https://zhuanlan.zhihu.com/p/27234078 LSTMhttps://colah.github.io/posts/2015-08-Understanding-LSTMs/ ELMoGRUrefer to https://blog.csdn.net/sinat_28015305/article/details/109539891 TransformerRefer to the tutorials http://nlp.seas.harvard.edu/2018/04/03/attention.html, http://jalammar.github.io/illustrated-transformer/, https://blog.csdn.net/zhong_ddbb/article/details/107564421 for a detailed introduction. OpenAI GPTpre-training(unsupervised learning) + fine-tuning(supervised learning) refer to https://zhuanlan.zhihu.com/p/59286975 GPT-3few shot learning are invloved in GPT-3; for more about few shot learning refer to https://zhuanlan.zhihu.com/p/165882989, https://www.zmonster.me/2019/12/08/few-shot-learning.html BERTrefer to https://unclestrong.github.io/DeepLearning_LHY21_Notes/Notes_html/18_BERT_P1.html, https://zhuanlan.zhihu.com/p/103226488 PanGu-αERNIEhttps://github.com/PaddlePaddle/ERNIE https://zhuanlan.zhihu.com/p/87008569 systemGoogle Cloud NLP, Microsoft Azure Text Analytics, IBM Watson Nat\u0002 ural Language Understanding and Amazon AWS Comprehend Datasetsreading comprehensionCMRC 2018Chinese Machine Reading Comprehension website: https://hfl-rc.com/cmrc2018/ github: https://github.com/ymcui/cmrc2018 Baseline: BERT related: https://zhuanlan.zhihu.com/p/73831398 morerefer to https://zhuanlan.zhihu.com/p/70355773","permalink":"http://mingg2333.top/2021/08/03/NLP/","photos":[]},{"tags":[{"name":"Windows","slug":"Windows","permalink":"http://mingg2333.top/tags/Windows/"}],"title":"Windows","date":"2021/08/02","text":"command lineset PATH_TO_BERT=1echo %PATH_TO_BERT%clspython run_cmrc2018_drcd_baseline.py ^ --use_tpu=False Esc: clear line Ctrl + C: cancel the command lines portnetstat -anonetstat -aon|findstr 2018 pidtasklist | findstr 50264tasklist | findstr simulator.exetaskkill /f /t /pid 9088 taskkill /f /t /im simulator.exe proxy# CMDset http_proxy=http://127.0.0.1:7890set https_proxy=http://127.0.0.1:7890set http_proxy=set https_proxy=# Git Bashgit config --global https.proxy http://127.0.0.1:7890git config --global https.proxy https://127.0.0.1:7890git config --global http.proxy 'socks5://127.0.0.1:7891' git config --global https.proxy 'socks5://127.0.0.1:7891'git config --global --unset http.proxygit config --global --unset https.proxy# PowerShell, not necessary$env:http_proxy=\"http://127.0.0.1:7890\"$env:https_proxy=\"http://127.0.0.1:7890\"","permalink":"http://mingg2333.top/2021/08/02/Windows/","photos":[]},{"tags":[{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"}],"title":"Notebook","date":"2021/08/01","text":"","permalink":"http://mingg2333.top/2021/08/01/Notebook/","photos":[]},{"tags":[{"name":"git","slug":"git","permalink":"http://mingg2333.top/tags/git/"}],"title":"Git","date":"2021/07/29","text":"Created: 2021-05-28 09:09:58 Modified: 2021-7-29 12:09:56 Git installation and usage. quickly see install windows 10 basic use create new repository clone existing repository Configure repository work with repository Git GUI use prepare with Github Create SSH Key Configure ssh-agent Add SSH key to Github prepare with Gitee Create SSH Key Add SSH key to Gitee what is git quickly seedetails later, make it quick ls -al ~/.sshssh-keygen -t ed25519 -C \"&lt;personal code, like a email&gt;\" [-f ~/.ssh/gitee_id_ed25519]eval `ssh-agent -s`ssh-add -lssh-add &lt;SSH private key&gt;ssh-agent -kssh -T git@github.comssh -T git@gitee.comgit --versionmkdir [&lt;directory&gt;]cd [&lt;directory&gt;]git init [&lt;directory&gt;]git clone &lt;repository&gt; [&lt;directory&gt;]git config --listgit config --global user.name MINGG2333git config --global user.email 54434036+MINGG2333@users.noreply.github.comgit config user.email \"{ID}+{username}@users.noreply.github.com\"git status -sgit logtouch README.mdcat README.mdgit add README.mdgit commit -m \"first commit\"git remote -vgit remote add origin git@github.com:&lt;name&gt;/&lt;repository&gt;.gitgit remote add origin2 git@gitee.com:&lt;name&gt;/&lt;repository&gt;.gitgit remote rename origin oschinagit remote set-url origin 仓库地址git remote rm origin2git push -u origin2 mastergit pull -u origin2 mastergit branch -M maingit branchgit checkout mastergit fetch origin2git diff --stat main origin2/maingit submodule add &lt;url&gt; &lt;directoty&gt;git rm --cached &lt;object&gt;git clone --recursive https://github.com/RishabhMaheshwary/query-attack.git# git lfs: An open source Git extension for versioning large filescurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bashsudo apt-get install git-lfsgit-lfs installgit lfs pullgit config --add core.filemode false *origin, origin2 are personal names for repository to clear commits, 清除github所有历史提交记录的方法 (ops-coffee.cn) for private email, git - Error “Your push would publish a private email address” - Stack Overflow, then change email in , Projects - AppVeyor, setting-envs installcheck your installation using command line( like Git CMD, Git Bash): git --version windows 10official website: Git for Windows or Git - Downloads (git-scm.com) you can refer to( remember your installation directory of git if you want to set it as environment variable later): Windows系统Git安装教程（详解Git安装过程）_IT技术实战-CSDN博客 *set {installation directory}\\cmd\\git.exe as environment variable in Path if you want to use it in other command line like cmd.exe Ubuntu/DebianFor the latest stable Git version in Ubuntu/Debian: sudo apt-get install git basic useyou can create a new repository or clone a existing one construction of a git repository (HEAD is the core, local repository) create new repositorycreate a local repository(版本库), a directory of ‘.git’, in the ‘directory ‘ using Git Bash : git init [&lt;directory&gt;] clone existing repositoryclone a existing repository in ‘directory ‘ using Git Bash: git clone &lt;repository&gt; [&lt;directory&gt;] Configure repositorycheck your configuration: git config --list set your information for local repository before “commit”: git config --global user.name \"&lt;name&gt;\"git config --global user.email &lt;email&gt; more configuration, refer to Git 创建仓库 | 菜鸟教程 (runoob.com) work with repository frequency use more use, refer to Git 仓库基础操作 - Gitee, Git 基本操作 | 菜鸟教程 (runoob.com), Git 远程仓库(Github) | 菜鸟教程 (runoob.com), Git Gitee | 菜鸟教程 (runoob.com). *you can place your remote repositories in Github, preparation see [prepare with Github](# prepare with Github). checkoutrefer to git checkout 命令详解, Git GUI userefer to 使用Git 总结-msysGit与GitHub 使用_荒野之鹰-CSDN博客 or Windows平台下Git的安装msysgit与配置_睡得香吃得好胆子大的专栏-CSDN博客 prepare with Githubconfigure your account SSH Key, refer to 使用 SSH 连接到 GitHub - GitHub Docs Create SSH Keycheck existing keys: ls -al ~/.ssh *”~/.ssh” is the default directory of SSH keys. otherwise, create a SSH key for your device using Git Bash: ssh-keygen -t [algorithm] -C \"&lt;personal code, like a email&gt;\" *algorithm(optional): rsa [-b 4096], ed25519(recommend). Configure ssh-agentssh-agent stores unencrypted keys in memory( for Unix-like OS) and communicates with SSH clients using a Unix domain socket ssh-agent principle run ssh-agent using Git Bash: # Windowseval `ssh-agent -s`# Linuxeval \"$(ssh-agent -s)\" check keys loaded in the ssh-agent: ssh-add -l if none, add SSH private key to the ssh-agent: ssh-add &lt;SSH private key&gt; *SSH private key example: ~/.ssh/id_ed25519 switch off the agent using Git Bash, refer to ssh agent详解 - 知乎 (zhihu.com): ssh-agent -k *if not use agent, there maybe warnings, solution refer to: Win10 从零搭建Git环境_feng991254的专栏-CSDN博客 or win10 git环境搭建_ydf8525的专栏-CSDN博客 Add SSH key to Github open responding SSH public key with a editor like Notepad, then copy the contents of the .pub file to your clipboard, *SSH public key example: ~/.ssh/id_ed25519.pub, so you can print it in line: # windows &amp; cat ~/.ssh/id_ed25519.pub# Linuxsudo apt-get updatesudo apt-get install xclipxclip -selection clipboard &lt; ~/.ssh/id_ed25519.pub go into your own Github setting -&gt; SSH and GPG keys, and create a new SSH key, then give a name of the key filling in the “title”, and paste the SSH public key contents into the “Key” field. test SSH connection: ssh -T git@github.com if something wrong, baidu or google. prepare with Giteeconfigure your account SSH Key Create SSH Keycheck existing keys: ls -al ~/.ssh *”~/.ssh” is the default directory of SSH keys. otherwise, create a SSH key for your device using Git Bash: ssh-keygen -t [algorithm] -C \"&lt;personal code, like a email&gt;\" *algorithm(optional): rsa [-b 4096], ed25519(recommend). Add SSH key to Gitee open responding SSH public key with a editor like Notepad, then copy the contents of the .pub file to your clipboard, *SSH public key example: ~/.ssh/id_ed25519.pub, so you can print it in line: cat ~/.ssh/id_ed25519.pub go into your own Gitee setting -&gt; SSH keys, then fill the blank and add a new SSH key: give a name of the key filling in the “title”, and paste the SSH public key contents into the “Key” field. test SSH connection: ssh -T git@gitee.com if something wrong, baidu or google. more about git谈谈 Git 存储原理及相关实现 - 知乎 (zhihu.com), 看完这篇还不会用Git，那我就哭了！ - 知乎 (zhihu.com), http://git.oschina.net/progit/, https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000, https://gitee.com/help/articles/4104,","permalink":"http://mingg2333.top/2021/07/29/git/","photos":[]},{"tags":[{"name":"VS code","slug":"VS-code","permalink":"http://mingg2333.top/tags/VS-code/"}],"title":"Visual Stdio Code","date":"2021/07/29","text":"Created: Jul 7 2021 11:36:46 Modified: 2021-7-29 12:06:43 configurationuse extension Setting Sync, refer to https://code.visualstudio.com/docs/editor/settings-sync Portable Moderefer to https://code.visualstudio.com/docs/editor/portable and https://www.zhihu.com/question/57671963/answer/1139906712 Note that there are no additional tasks, like: In order to add code to Windows Explorer file and directory context menu, use a .bat script: @ECHO OFFrem Please ensure that this script is in the same directory as code.exePUSHD %~DP0TITLE VSCode for WindowsMd \"%WinDir%\\System32\\test_permissions\" 2&gt;NUL||(Echo 请使用右键管理员身份运行&amp;&amp;Pause &gt;NUL&amp;&amp;Exit)Rd \"%WinDir%\\System32\\test_permissions\" 2&gt;NULSetLocal EnableDelayedExpansionSET /P ST=输入a添加右键菜单，输入d删除右键菜单：if /I \"%ST%\"==\"a\" goto Addif /I \"%ST%\"==\"d\" goto Remove:Addecho Add VSCode for opening files.reg add \"HKEY_CLASSES_ROOT\\*\\shell\\VSCode\" /t REG_SZ /v \"\" /d \"&amp;VSCode\" /freg add \"HKEY_CLASSES_ROOT\\*\\shell\\VSCode\" /t REG_EXPAND_SZ /v \"Icon\" /d \"%~dp0Code.exe\" /freg add \"HKEY_CLASSES_ROOT\\*\\shell\\VSCode\\command\" /t REG_SZ /v \"\" /d \"%~dp0Code.exe \\\"%%1\\\"\" /fecho Add VSCode for opening directories.reg add \"HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode\" /t REG_SZ /v \"\" /d \"Open with VSCode\" /freg add \"HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode\" /t REG_EXPAND_SZ /v \"Icon\" /d \"%~dp0Code.exe\" /freg add \"HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode\\command\" /t REG_SZ /v \"\" /d \"%~dp0Code.exe \\\"%%1\\\"\" /fecho Add VSCode for opening directories in background.reg add \"HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode\" /t REG_SZ /v \"\" /d \"Open with VSCode\" /freg add \"HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode\" /t REG_EXPAND_SZ /v \"Icon\" /d \"%~dp0Code.exe\" /freg add \"HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode\\command\" /t REG_SZ /v \"\" /d \"%~dp0Code.exe \\\"%%V\\\"\" /fexit:Removereg delete \"HKEY_CLASSES_ROOT\\*\\shell\\VSCode\" /freg delete \"HKEY_CLASSES_ROOT\\Directory\\shell\\VSCode\" /freg delete \"HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\VSCode\" /fexit To Update Portable VS Code, On Windows and Linux, you can update VS Code by copying the data folder over to a more recent version of VS Code. On mac OS, automatic updates should work as always, no extra work needed. DebuggingconfigureRefer to https://code.visualstudio.com/docs/editor/debugging, https://code.visualstudio.com/docs/editor/variables-reference. Take bert for classification demo for example: { // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"Python: 当前文件\", \"type\": \"python\", \"request\": \"launch\", \"program\": \"${file}\", \"console\": \"integratedTerminal\", \"args\": [ \"--task_name=MRPC\", \"--do_train=true\", \"--do_eval=true\", \"--data_dir=${input:GLUE_DIR}/MRPC\", \"--vocab_file=${input:BERT_BASE_DIR}/vocab.txt\", \"--bert_config_file=${input:BERT_BASE_DIR}/bert_config.json\", \"--init_checkpoint=${input:BERT_BASE_DIR}/bert_model.ckpt\", \"--max_seq_length=128\", \"--train_batch_size=2\", \"--learning_rate=2e-5\", \"--num_train_epochs=1.0\", \"--output_dir=/tmp/mrpc_output/\", ] } ], \"inputs\": [ { \"id\": \"GLUE_DIR\", \"type\": \"promptString\", \"description\": \"path GLUE_DIR.\", \"default\": \"MyMLData/DataSets\" }, { \"id\": \"BERT_BASE_DIR\", \"type\": \"promptString\", \"description\": \"path BERT_BASE_DIR.\", \"default\": \"MyMLData/CheckPoint/uncased_L-12_H-768_A-12\" } ]} run to cursorSet the shortcut for it in File - Preference - Keyboard Shortcuts. Bracket Pair Colorizer other setting","permalink":"http://mingg2333.top/2021/07/29/VScode/","photos":[]},{"tags":[{"name":"markdown","slug":"markdown","permalink":"http://mingg2333.top/tags/markdown/"}],"title":"markdown","date":"2021/07/06","text":"configurationMarkTextmarktext/marktext: 📝A simple and elegant markdown editor, available for Linux, macOS and Windows. (github.com) Typora","permalink":"http://mingg2333.top/2021/07/06/markdown/","photos":[]},{"tags":[],"title":"paper","date":"2021/07/05","text":"Created: 2021-07-05 10:08:51 Modified: 2021-07-05 13:36 conference1 fast view 2 open in new tab 中国计算机学会推荐国际学术会议和期刊目录-2019.pdf 3 中国计算机学会推荐国际学术会议和期刊目录 (?rel=”noopener noreferrer” class=’button hollow manufacturer-links__link’)","permalink":"http://mingg2333.top/2021/07/05/paper/","photos":[]},{"tags":[],"title":"blog","date":"2021/07/05","text":"how to build and publish your own blog Created: 2021-06-06 23:57:18 Modified: 2021-7-5 09:35:48 quickly see# configure a markdown apllication, like Typora, VScode# Only one devicehexo n \"&lt;blog name&gt;\"hexo cleanhexo s -ghexo d -g# Remove to new device## install git## set ssh key access to github; clone repo, configure user and build remote;git clone https://github.com/MINGG2333/mingg2333topSource.git MyBloggit remote rm origingit remote add origin git@github.com:MINGG2333/mingg2333topSource.gitgit config --global user.name &lt;name&gt;git config --global user.email &lt;email&gt;# if use hexo help to manage:## install node.js [v12.16.2] for npm## install hexo: npm install -g hexo## cd &lt;repo&gt;## install all modules listed as dependencies in package.json: npm install# Multiple devicesgit pull origin main# if use hexo to create a artical:hexo n \"&lt;blog name&gt;\"git add .git commit -m 'second commit'git push origin main## check building Note: if use AppVeyor, you can check building in https://ci.appveyor.com/projects. use hexoGuidesRefer to Documentation | Hexo. In local, to build your blog by hexo, you need to make sure Git and Node.js installed in proper version, then you use npm to install Hexo globally: npm install hexo-cli -g In the beginning of a hexo blog, hexo init is used to create basic hexo source by cloning hexo-starter and default themes/landscape, and installing some basic dependencies into node_modules/ according to default package.json, before you change theme of your blog personally when you clone the Themes and install some specific theme dependencies according to related document like README.md by using the following line format: npm install --save &lt;module name&gt; Due to --save option and usage of npm install in root of hexo source, new modules installed manually are added to package.json which make it complete containing the whole blog dependencies. Configure and rich your blog, make _config.yml, themes/(like ***/_config.yml) and source/ personal. In order to deploy your blog to your GitHub Repo, hexo generate is used to generate static files in public/, then hexo deploy push them to your Repo in one shot, so you need to configure the Repo information in _config.yml in advance, and you can set SSH key to skip the password-inputting process. what to doIn Windows 10, refer to 搭建个人博客-hexo+github详细完整步骤 - 简书 (jianshu.com). Note: there maybe some compatibility issues between latest Node v14 and hexo, you can downgraded to Node v12.22.2 (LTS) to solve it usually, refer to Windows下完全卸载node.js并安装node.js的多版本管理工具nvm-windows_不积跬步，无以至千里-CSDN博客_windows卸载node, or upgrade to hexo v4.2.1, refer to Regression in Node 14 · Issue #4260 · hexojs/hexo (github.com). There maybe other issues with stylus, refer to NodeJS 14 warnings · Issue #2534 · stylus/stylus (github.com). In Ubuntu, refer to 从零开始建立一个属于你个人的Hexo博客 | 可乐博客 (cokemine.com), 如何在Ubuntu 18.04上安装Node.js和npm (myfreax.com). configure deployConfigure the Repo information in _config.yml, refer to 设置 SSH 使用 hexo deploy 时免输用户名密码 - SegmentFault 思否: deploy: type: git repo: git@github.com:{user name}/{repo name}.git branch: master hexorefer to 指令 | Hexo, hexo常用命令笔记 - SegmentFault 思否. MigrationTo rebuild your existing hexo blog on other local device, you need to make sure Git and Node.js installed in proper version, then you use npm to install Hexo globally: npm install hexo-cli -g Meanwhile, you can clone your hexo source from GitHub that you push from your initial device before. You need to configure the user of the source and would better set SSH key for push and pull later. After that, you cannot use hexo init directly to Initializes this hexo source, but install all of the dependencies into node_modules/ according to package.json instead npm install and then make sure the specific theme dependencies installed as well, you can check modules list: npm list [--depth 0] After update you blog content in local, you can use hexo generate to generate static files in public/, and use hexo deploy to push them to your blog Repo. On the other hand, you need to update the hexo source on GitHub by push. AppVeyorwhat is AppVeyor and how to use it generally, refer to Welcome to AppVeyor | AppVeyor. GuidesAppVeyor server works as a remote device, but you cannot set you SSH key easily on it and interact with it during its building work, instead you can use a Personal Access Tokens to access your GitHub. AppVeyor can monitor your source Repo and if there is something updated, it will handle your Repo according to a appveyor.yml file, like # set clone depthclone_depth: 5# environment variablesenvironment: nodejs_version: \"12.16.2\" # this is how to set encrypted variable. Go to \"Settings\" -&gt; \"Encrypt YAML\" page in account menu to encrypt data. access_token: secure: TDe3jxjKP7nNejS+YYeTJS+r/3VhqtmrWtxfYpDZSYOwwEm78xGlAoCNQswAS2hU# Install scripts. (runs after repo cloning)install: # Get the latest stable version of Node.js or io.js - ps: Install-Product node $env:nodejs_version - node --version - npm --version # install modules - npm install - npm install hexo-cli -g - npm list# to run your custom scripts instead of automatic MSBuildbuild_script: - hexo generateartifacts: - path: public# on successful buildon_success: - git config --global credential.helper store - ps: Add-Content \"$env:USERPROFILE\\.git-credentials\" \"https://$($env:access_token):x-oauth-basic@github.com`n\" - git config --global user.email \"%GIT_USER_EMAIL%\" - git config --global user.name \"%GIT_USER_NAME%\" - git clone --depth 5 -q --branch=%TARGET_BRANCH% %STATIC_SITE_REPO% %TEMP%\\static-site - cd %TEMP%\\static-site - del * /f /q - for /d %%p IN (*) do rmdir \"%%p\" /s /q - SETLOCAL EnableDelayedExpansion &amp; robocopy \"%APPVEYOR_BUILD_FOLDER%\\public\" \"%TEMP%\\static-site\" /e &amp; IF !ERRORLEVEL! EQU 1 (exit 0) ELSE (IF !ERRORLEVEL! EQU 3 (exit 0) ELSE (exit 1)) - git add -A - echo %APPVEYOR_REPO_BRANCH% # %APPVEYOR_REPO_BRANCH% is source Repo branch - if \"%APPVEYOR_REPO_BRANCH%\"==\"main\" if not defined APPVEYOR_PULL_REQUEST_NUMBER (git diff --quiet --exit-code --cached || git commit -m \"Update Static Site\" &amp;&amp; git push origin %TARGET_BRANCH% &amp;&amp; appveyor AddMessage \"Static Site Updated\") what to dorefer to , 用Hexo、Github Pages和Appveyor搭建你的私人博客 | Richard Qiu的博客 (supermizar.github.io), Hexo博客进阶教程（二）| 使用Appveyor备份并持续集成博客 - 云+社区 - 腾讯云 (tencent.com). troubleshootingthemes there maybe problems with pushing themes/*** because your theme is actually a git repo, my workaround is to push those directories manually: # make submodule on GitHub become directory## backup themes/***rm themes/***/touch themes/***/README.mdgit add .git commit -m 'delete submodule, create directory'git push origin main## restore themes/***git add themes/***/git commit -m 'update directory'git push origin main","permalink":"http://mingg2333.top/2021/07/05/blog/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"}],"title":"DL concept","date":"2021/07/04","text":"poolingaddition, bi-interaction, and global average pooling loss functionCrossEntropyQuantify the difference between two probability distributions. optimizerwarmupread:https://www.zhihu.com/question/338066667 metricsperplexity PPLrefer to https://blog.csdn.net/index20001/article/details/78884646 traintrain from scratchtrain without pre-training some about convergence:https://www.zhihu.com/question/64966457","permalink":"http://mingg2333.top/2021/07/04/DLconcept/","photos":[]},{"tags":[],"title":"conda","date":"2021/06/29","text":"refer to Conda常用命令整理—创建环境—-conda create –name your_env_name python=3.7_如何利用html码转载别人的博客-CSDN博客_conda create conda info --envsconda activate {your_env_name}conda deactivateconda create --name {your_env_name} [python=3.7]conda install -n {your_env_name} {package_name}while read requirement; do conda install --yes $requirement; done &lt; requirements.txtwhile read requirement; do conda install --yes $requirement || pip install $requirement; done &lt; requirements.txtconda remove --name {your_env_name} --allconda list --revisionsconda install --rev 0 # delete all packager &amp; cacheconda clean -y --all# 不太适合移动conda config --add envs_dirs C:\\Anaconda3\\envs for Miniconda3, refer to Tensorflow with DirectML on WSL 2 - Win32 apps | Microsoft Docs, Installation — conda 4.10.2.post1+248741a84 documentation. # or wget https://repo.anaconda.com/archive/Miniconda3-latest-Linux-x86_64.shwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh bash Miniconda3-latest-Linux-x86_64.shconda init use conda installed by roothttps://blog.csdn.net/u010510962/article/details/109508896 https://blog.csdn.net/weixin_39518984/article/details/111766550 anaconda3/bin/conda init bashsource ~/.bashrcsource activate baseconda activate base","permalink":"http://mingg2333.top/2021/06/29/conda/","photos":[]},{"tags":[{"name":"PC","slug":"PC","permalink":"http://mingg2333.top/tags/PC/"}],"title":"Windows Subsystem for Linux","date":"2021/06/28","text":"what is WSLWSL is a Microsoft official solution for GNU/Linux environment running on windows, instead of either virtual machine or double system, for more information referring to What is Windows Subsystem for Linux | Microsoft Docs. GNU/Linux environment is a application on windows via WSL, and you can manage this environment by terminal. Now there are several GUI tool having supported it, while Microsoft team is now trying to develop GPU compute on WSL. installationfor installation refer to Install WSL on Windows 10 | Microsoft Docs, WSL | Ubuntu, WSL - Ubuntu Wiki Notice: The Windows Subsystem for Linux only runs on your system drive(usually this is your C: drive). GPU compute supportSupport for GPU compute, the #1 most requested WSL feature, is now ONLY available for preview via the Windows Insider program, referring to GPU accelerated ML training in WSL | Microsoft Docs, GPU accelerated ML training inside the Windows Subsystem for Linux - Windows Developer Blog. To make it, refer to NVIDIA CUDA preview in WSL 2 | Microsoft Docs, Latest CUDA/CUDA on Windows Subsystem for Linux topics - NVIDIA Developer Forums, install Insider Preview Buildsdownload and install the Windows 10 Insider Preview Builds(actually Windows 11 Insider Preview-6/29/2021). install preview GPU driverrefer to preview GPU driver | Microsoft Docs. developdevelop based on the above preview GPU driver if use NVIDIA GPU, the preview GPU driver actually includes the CUDA on WSL 2, refer to CUDA on Windows Subsystem for Linux (WSL) - Public Preview | NVIDIA Developer, so you can use directly CUDA C++, consulting the CUDA C++ Programming Guide, located in /usr/local/cuda-10.1/doc, or referring to CUDA 高性能并行计算入门_cyhbrilliant的博客-CSDN博客_cuda并行计算, and its performance is really good(Ubuntu &gt; WSL &gt; Windows); besides, you can start using your existing Linux workflows through NVIDIA Docker, refer to CUDA on WSL Documentation (nvidia.com); Wrong try: go on installing cuDNN based on CUDA, you may need to use mirrors source, refer to 使用conda安装python包_cathar的专栏-CSDN博客_conda安装python包 or pip 使用国内镜像源 | 菜鸟教程 (runoob.com), actually there is error around CUDA lib64 and hence almost frameworks (like TensorFlow2, MindSpore) cannot access to NVIDIA GPU, but PyTorch. Besides, use TensorFlow with DirectML. AMD, Intel and NVIDIA preview GPU drivers all include DirectX WSL driver supporting DX12 APIs, so TensorFlow with a DirectML backend can access to those GPUs,refer to Install the Tensorflow with DirectML package | Microsoft Docs. There is a sample in the following section. Notice: many operations on WSL need root, so if you meet something wrong, try to type sudo ahead, and it is also really useful and important to look up the output information; maybe you need some knowledge of Ubuntu samplebash: cd ~lsmkdir mycodecd mycodetouch tf_test.pylsvim tf_test.py python, refer to docs/site/en/r1/tutorials at master · tensorflow/docs · GitHub: import tensorflow as tfmnist = tf.keras.datasets.mnist(x_train, y_train),(x_test, y_test) = mnist.load_data()x_train, x_test = x_train / 255.0, x_test / 255.0model = tf.keras.models.Sequential([ tf.keras.layers.Flatten(input_shape=(28, 28)), tf.keras.layers.Dense(512, activation=tf.nn.relu), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(10, activation=tf.nn.softmax)])model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])model.fit(x_train, y_train, epochs=5)model.evaluate(x_test, y_test) bash: &lt;Esc&gt;:wq&lt;Enter&gt;conda info --envsconda activate directmllspython3 tf_test.py output: You can see it working well, though there are several warnings, which are almost due to versions, refer to How can I address these warning messages on my first directml attempt? · Issue #117 · microsoft/DirectML · GitHub, 成功解决Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2_张齐贤的博客-CSDN博客. For more samples, refer to DirectML/TensorFlow at master · microsoft/DirectML · GitHub. Running Graphical Applicationsrefer to Running Graphical Applications - Ubuntu Wiki, troubleshootinginstallationrefer to troubleshooting installation of WSL on Windows 10 | Microsoft Docs, GPU supportWindows 10 Insider Preview Buildsinstall the Windows 10 Insider Preview Builds, but stop here solution: before building this preview, update Windows as well as kernel to the latest general version Python environmentwhen you try to use TensorFlow with DirectML, following official steps and setting up Python environment, you may meet errors using either sudo conda or conda. solution: First, check the bashrc program on WSL: vim ~/.bashrc make sure there is export PATH of miniconda3, like and then execute it: source ~/.bashrc Root. you need to give root to write in the direction of miniconda3, refer to conda创建环境报错：NotWritableError: The current user does not have write permissions to a required path._HaotianYan的博客-CSDN博客: cd ~sudo chown -R {username} anaconda3 *username: user name of your Ubuntu; besides, ~ means /home/{username}.","permalink":"http://mingg2333.top/2021/06/28/WSL/","photos":[]},{"tags":[{"name":"PC","slug":"PC","permalink":"http://mingg2333.top/tags/PC/"}],"title":"DoubleSystem","date":"2021/06/28","text":"Created: 2021-06-28 11:06:34 Modified: 2021-06-28 11:06:34 # grub: refer to https://blog.csdn.net/qq_33406883/article/details/106708621# m1:sudo gedit /boot/grub/grub.cfg# set default=\"2\"# m2:sudo gedit /etc/default/grub# GRUB_DEFAULT=2sudo update-grub# bootmgr: refer to https://www.reneelab.com.cn/m/windows-10-windows-boot-manager.htmlbcdedit /set {bootmgr} displaybootmenu yesbcdedit /set {bootmgr} timeout 30 refer to https://blog.csdn.net/liao20081228/article/details/81297143 Installationrefer to Windows10安装ubuntu18.04双系统教程 - 不妨不妨，来日方长 - 博客园 (cnblogs.com), How to Install Ubuntu 18.04 Alongside With Windows 10 or 8 in Dual Boot (itzgeek.com). Download: Ubuntu 18.04.5 LTS (Bionic Beaver) offical websit Ubuntu官方推荐U盘写入工具_捭阖人生的博客-CSDN博客_u盘写入工具, Create a bootable USB stick with Rufus on Windows | Ubuntu Notice: BIOS and Boot GUIs differ from each other due to different vendor of Computer, so it is better to search the guide according to Computer on the Internet. And in some GUIs, there is no USB Boot option, but only USB model name instead, like Kingston Data Traveler. if you have specific independent display card, you may meet troubles into Install Ubuntu on the GNU GRUB. To solve it, you need to restart to USB Boot and disable the graphics features by setting thenomodesetoption before Install Ubuntu, please consult tips on the GNU GRUB bootloader screen and partly refer to Manual “nomodeset” Kernel Boot Line Option for Linux Booting | Dell 中国, ubuntu U盘安装时黑屏花屏 nouveau错误 - 极客分享 (geek-share.com), 启动Ubuntu 16.04 Live DVD/USB碰到花屏的解决方案_Linux系统教程_红联Linux门户 (linuxdiyf.com). During Install Ubuntu, there is a step called installation type, where there is a option ‘’Install Ubuntu alongside Windows Boot Manager“, which means you now Install Ubuntu 18.04 Alongside With Windows 10 in Dual Boot correctly. But you can choose “Something else“ for partition layout and its size. It maybe unnecessary to use individual efi for ubuntu booter, refer to ThinkPad笔记本安装win10+Ubuntu17.10双系统. And the swap area is used for virtual memory, which means you needn’t set too much for it if you have adequate memory. During Restart after installation, you may meet trouble again after choosing Ubuntu on the GNU GRUB menu if you specific independent display card. To solve it, refer to ubuntu双系统启动时卡死解决办法 - 不妨不妨，来日方长 - 博客园 (cnblogs.com), Manual “nomodeset” Kernel Boot Line Option for Linux Booting | Dell 中国. If you access to Internet right now, I suggest you to install GPU drivers instead of modifying /etc/default/grub and setting to nomodeset mode as above websits mentioned, seeing next notice. Install NVIDIA driver, refer to Ubuntu 安装Nvidia显卡驱动-百度经验 (baidu.com). Use the following command line to check your diver, if nothing outputs, try to restart. nvidia-smi For more comprehensive guide, refer to windows10安装ubuntu双系统教程（绝对史上最详细） - 不妨不妨，来日方长 - 博客园 (cnblogs.com). Troubleshoting Time sync between ubuntu and windows, refer to windows10和ubuntu双系统，切换到windows后时间少8小时不对的解决.","permalink":"http://mingg2333.top/2021/06/28/DoubleSystem/","photos":[]},{"tags":[{"name":"PC","slug":"PC","permalink":"http://mingg2333.top/tags/PC/"}],"title":"vm","date":"2021/06/27","text":"refer to windows下安装虚拟机+ Ubuntu的详细过程_望那伊人的博客-CSDN博客_windows安装ubuntu虚拟机. Ubuntu on VMware on Windows cannot easily access to GPU, unless using Esxi/hyper-v to make gpu passthrough.","permalink":"http://mingg2333.top/2021/06/27/vm/","photos":[]},{"tags":[],"title":"matlab","date":"2021/06/10","text":"about mat% createA = magic(4)1:5% [1,2,3,4,5]% transposeB = A.'A = transpose(B)% stack by horizon, have the same rows# A * [B C] = [A*B A*C]c = [a b]c = [a, b]% stack by verticalness, have the same columnsc = [a; b] about structA.b savesave('data2.mat', 'descr');save('data2.mat', 'label','-append'); read minist datasetrefer to 【机器学习】MATLAB读取mnist数据库_心所愿，力必坚！-程序员宅基地 - 程序员宅基地 (cxyzjd.com): % loadMNISTImages.mfunction images = loadMNISTImages(filename)%loadMNISTImages returns a 28x28x[number of MNIST images] matrix containing%the raw MNIST imagesfp = fopen(filename, 'rb');assert(fp ~= -1, ['Could not open ', filename, '']);magic = fread(fp, 1, 'int32', 0, 'ieee-be');assert(magic == 2051, ['Bad magic number in ', filename, '']);numImages = fread(fp, 1, 'int32', 0, 'ieee-be');numRows = fread(fp, 1, 'int32', 0, 'ieee-be');numCols = fread(fp, 1, 'int32', 0, 'ieee-be');images = fread(fp, inf, 'unsigned char');images = reshape(images, numCols, numRows, numImages);images = permute(images,[2 1 3]);fclose(fp);% Reshape to #pixels x #examplesimages = reshape(images, size(images, 1) * size(images, 2), size(images, 3));% Convert to double and rescale to [0,1]images = double(images) / 255;end% loadMNISTLabels.mfunction labels = loadMNISTLabels(filename)%loadMNISTLabels returns a [number of MNIST images]x1 matrix containing%the labels for the MNIST imagesfp = fopen(filename, 'rb');assert(fp ~= -1, ['Could not open ', filename, '']);magic = fread(fp, 1, 'int32', 0, 'ieee-be');assert(magic == 2049, ['Bad magic number in ', filename, '']);numLabels = fread(fp, 1, 'int32', 0, 'ieee-be');labels = fread(fp, inf, 'unsigned char');assert(size(labels,1) == numLabels, 'Mismatch in label count');fclose(fp);end","permalink":"http://mingg2333.top/2021/06/10/matlab/","photos":[]},{"tags":[],"title":"ML theory","date":"2021/06/08","text":"Created: Modified: 自动学习的关键技术主要是基于信息熵上限近似模型的树搜索最优特征变换和基于信息熵上限近似模型的贝叶斯优化自动调参。通过这些关键技术，可以从企业关系型（结构化）数据中，自动学习数据特征和规律，智能寻优特征&amp;ML模型及参数，准确性达到甚至专家开发者的调优水平。自动深度学习的关键技术主要是迁移学习（只通过少量数据生成高质量的模型），多维度下的模型架构自动设计（神经网络搜索和自适应模型调优），和更快、更准的训练参数自动调优自动训练。refer to https://support.huaweicloud.com/productdesc-modelarts/modelarts_01_0016.html.","permalink":"http://mingg2333.top/2021/06/08/MLtheory/","photos":[]},{"tags":[],"title":"mmdet","date":"2021/06/08","text":"densehead/anchorhead roihead bbox bbox rbbox mask shared extractor roi rroi loss plugins nonlocal","permalink":"http://mingg2333.top/2021/06/08/mmdet/","photos":[]},{"tags":[{"name":"encoding","slug":"encoding","permalink":"http://mingg2333.top/tags/encoding/"},{"name":"unicode","slug":"unicode","permalink":"http://mingg2333.top/tags/unicode/"},{"name":"utf-8","slug":"utf-8","permalink":"http://mingg2333.top/tags/utf-8/"}],"title":"encoding and unicode","date":"2020/07/28","text":"处理字符画前期深入了解了编码。","permalink":"http://mingg2333.top/2020/07/28/unicode/","photos":[]},{"tags":[{"name":"CS入门","slug":"CS入门","permalink":"http://mingg2333.top/tags/CS%E5%85%A5%E9%97%A8/"},{"name":"csapp","slug":"csapp","permalink":"http://mingg2333.top/tags/csapp/"},{"name":"算法","slug":"算法","permalink":"http://mingg2333.top/tags/%E7%AE%97%E6%B3%95/"}],"title":"CS学习笔记","date":"2020/07/26","text":"CS学习笔记概述。 [TOC] 学习内容：算法，os，network，db，unix编程，计算机体系结构，数据结构、计算机组成原理、操作系统和计算机网络 计算机 书：csapp 算法学习：dp,dijkstra,backtrack(dfs,bfs),sort,单调栈,kmp,AI LEETCODE1362：最接近因子,Leetcode1362,因数,解法 #","permalink":"http://mingg2333.top/2020/07/26/CSnote/","photos":[]},{"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"http://mingg2333.top/tags/tensorflow/"},{"name":"软件安装","slug":"软件安装","permalink":"http://mingg2333.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"}],"title":"installing tensorflow","date":"2020/07/17","text":"准备Intel嵌入式邀请赛初选期间，了解学习了tensorflow，下面主要记录tensorflow 2 cpu版本的安装。 Usagetfrecordsrefer to https://zhuanlan.zhihu.com/p/40588218 Estimatorrefer to https://www.cnblogs.com/huangyc/p/10341794.html, https://blog.csdn.net/wwangfabei1989/article/details/90516318，https://zhuanlan.zhihu.com/p/76258948.","permalink":"http://mingg2333.top/2020/07/17/tensorflow/","photos":[]},{"tags":[{"name":"python","slug":"python","permalink":"http://mingg2333.top/tags/python/"},{"name":"图像处理","slug":"图像处理","permalink":"http://mingg2333.top/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"字符画","slug":"字符画","permalink":"http://mingg2333.top/tags/%E5%AD%97%E7%AC%A6%E7%94%BB/"}],"title":"图像处理之字符画","date":"2020/07/15","text":"为入门python，做了些利用cv2，PIL库简单处理图像的学习。 affine transformation","permalink":"http://mingg2333.top/2020/07/15/imageprocess/","photos":[]},{"tags":[],"title":"testauto","date":"2020/07/03","text":"change1 change2 change3 change4 change5 code change6","permalink":"http://mingg2333.top/2020/07/03/testauto/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"IC","slug":"IC","permalink":"http://mingg2333.top/tags/IC/"}],"title":"AI chip","date":"2020/06/11","text":"最近对AI芯片进行了进一步的了解，进行一些总结。 [TOC] 芯片分类 云端与边缘 神经网络运算芯片与类神经元芯片 神经网络运算芯片 类神经元芯片 我的想法 芯片分类云端与边缘随着分布式智能、万物互联的发展，在云端的计算将会部分下沉至至边缘侧，云端侧AI芯片将主要负责训练，用户侧的边缘计算芯片更多地负责推理与预测，并支持一定程度的训练。边缘计算芯片及其开发板，在边缘计算典型的开发板及其使用方法一文中做了一定介绍。 神经网络运算芯片与类神经元芯片这两类AI芯片是依据芯片架构进行的分类，前者为传统的“冯诺依曼架构”芯片，最大的特点就是存储器与运算单元分离开来，后者则为非“冯诺依曼架构”芯片，比如以清华天机、IBM的TrueNorth为代表的把存储与计算放在一个结构里（类似神经元）的芯片，再比如国内的直接在Flash存储单元里进行乘加法运算的“存算一体AI芯片”。 显然，类神经元芯片的一大优势就是加快了数据的读取速度，尤其是针对非易失性存储器（ROM），因此，AI芯片的一个研究方向就是挖掘高性能的存储器。 神经网络运算芯片这种芯片就是目前常说的AI芯片，包括可以运行神经网络、进行AI计算的GPU、FPGA、ASIC。知乎有一篇比较详细的文章：AI 芯片和传统芯片有何区别？。 类神经元芯片通常被称为类脑芯片或者类神经计算芯片。从清华天机Towards artificial general intelligence with hybrid Tianjic chip architecture这颗芯片来看，将其称之为类神经元芯片我认为更加合适。 整颗芯片的结构与神经元进行类比，天机团队将存储神经网络权值的存储部分称为synapse memory，类比神经元的突触，它与其他的运算部分共同形成了类神经元。 从老师那里了解到，目前像这样常见的类脑芯片，一般用基于传统的、技术成熟的硅基MOSFET来做成，但由于传统器件局限，需要大量MOSFET器件才能实现一个类脑神经元。因此，新型非硅基的非易失性核心器件也是AI芯片的一个发展方向。 我的想法从目前的研究中也看出来，类脑芯片的研究仍是为了提供一个高效运行神经网络的平台，清华天机进步的重要一点就是提供了更加通用的平台、支持了混合的神经网络。这也让我重新思考，在芯片上快速地运行神经网络确实是人工智能芯片重要的一点，不过目前的芯片研究还是和我想象的有些不同。 最后，我发现我所想的是一种“功能主义[1]”的想法。从嵌入式SOC的角度来想，我把它和整个“神经系统”作比较而非神经元网络，它的非易失性存储器所存储的是有物理意义的“信息”而非权重，而“训练”的过程则为，根据特定的处理方法，信息（包括输入输出的硬件等一切事物的信息）不断地被积累、被增删查改，有一点面向对象的感觉。 而目前的AI芯片包括类脑芯片的发展趋势是根据“结构主义[1]”的思想，也就是根据人神经网络的微观结构（即非线性神经元之间的复杂连接）进行高相似度的模拟，从而模拟人脑认知的过程，也正是结构主义的思想创立了人工神经网络的理论。 [1]ANN百度百科","permalink":"http://mingg2333.top/2020/06/11/aiic/","photos":[]},{"tags":[{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"边缘计算","slug":"边缘计算","permalink":"http://mingg2333.top/tags/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/"},{"name":"IC","slug":"IC","permalink":"http://mingg2333.top/tags/IC/"}],"title":"边缘计算典型的开发板及其使用方法","date":"2020/06/02","text":"总结对边缘计算及其芯片与开发板，不定期更新。 [TOC] 边缘计算的由来 与云计算对应 边缘计算 边缘计算芯片运行算法更好 边缘计算的优点 边缘计算开发板 intel google 英伟达 华为 比特大陆 开发与使用方法 开发思路 开发流程与方法 利用服务器的开发方式 边缘计算开发板与一般芯片开发板的不同 参考文献及资料 边缘计算的由来与云计算对应以语音识别为例，输入法里的语音输入，需要联网才能运行，联网的过程就是把语音数据上传到云端进行处理，处理后的结果再下传回用户。语音识别属于AI里的“自然语言理解”，复杂的语句识别要经历语音分析、词法分析、句法分析、语义分析、语用分析等层层过程，整个过程的运算会越来越复杂，而且还要结合训练后的语音模型，而云端既完成了基于海量数据的语音模型的训练，又能够对语音进行分析与识别。 边缘计算还是从输入法里的语音输入说起。下载离线语音包，就可以实现不联网的语音识别，整个过程在本地运算算法，这就是一种边缘计算。 下载的语音包其实是来自云端的训练，而语音分析与识别分过程确确实实是在手机端即“边缘”进行的，这就体现出一种云端与边缘的分工。 在过去的手机中通常是利用CPU运行这种算法，而现在的趋势是利用集成的AI/边缘计算芯片来运行这种算法 。 边缘计算芯片运行算法更好因为芯片的结构。目前的高级算法主要是进行神经网络的计算，比如CNN（卷积神经网络），这些运算本质上是向量、矩阵的乘加运算（如图），而AI/边缘计算芯片的结构能够高效地进行并行计算（如图）。 边缘计算的优点运用AI/边缘计算芯片进行AI本地推理可以显著节约云端的带宽和云计算的成本，并能将数据保存在本地从而保护用户隐私。 边缘计算开发板边缘计算开发板(EDB)就是以AI/边缘计算芯片为核心的开发板，用于开发者对芯片的学习与开发，和普通的开发板外观上没有什么区别，下面按照芯片供应商分类举一些典型的例子。 intel芯片：第八代Intel®Core™处理器开发板：Pico-WHU4开发板 googleGoogle形成了以Edge TPU为核心的边缘计算开发体系。Google的开发板有很多种。 芯片：Edge TPU开发板： Coral Dev Board ​ Coral System-on-Module ​ Tinker Edge T/E ​ Tiorb AIX 英伟达NVIDIA 开发板：Jetson Nano 华为华为也有比较完善的边缘计算开发生态。 芯片：麒麟970开发板：HiHope Hikey 970 芯片：昇腾310开发套件：Atlas 200 DK 比特大陆芯片：BM1880开发板：算丰边缘计算开发板 开发与使用方法开发思路SOC开发板一般有两种开发思路： 1.把开发板作为USB device（即把SDK安装在电脑进行开发） 2.开发板作为host role（即把SDK安装在开发板的SOC芯片中） 开发流程与方法典型的边缘计算开发板都具有相似的开发流程： 1.准备硬件（电源、TF卡、网卡网线、显示器、鼠标、摄像头等） 2.运行（或者更换）操作系统 3.下载对应的SDK，开发应用程序 利用服务器的开发方式以华为Atlas 200 DK为例， 1.环境部署： ○硬件准备：包括SD卡、读卡器、摄像头、MIPI-CSI连接线（常用于嵌入式视觉领域）、Type-C等； ○准备Ubuntu服务器，为了下一步准备； ○运行环境搭建：与服务器连接制作SD卡，开发套件读取SD卡运行系统，连接服务器在服务器中部署开发工具/平台（如有UI界面的集成了DDK的专用软件SDK或者用于使用命令行的DDK）； 2.应用开发： ○模型转换，导入已训练好的第三方网络模型，基于模型接口进行编程；算子开发； ○应用开发、应用编译及部署。 边缘计算开发板与一般芯片开发板的不同边缘计算开发板的开发一般都与AI相关，因此离不开AI训练/模型相关的平台，通过一些平台导入模型进行训练或者推理（如Model Play），还需要借助通用的框架在移动或者嵌入式设备上调用模型（如TensorFlow Lite）。 参考文献及资料[1]蔡自兴,刘丽珏,蔡竞峰,等.人工智能及其应用.第5版[M].清华大学出版社:北京,2016:152-159. [2]Intel开发者社区 https://software.intel.com/content/www/us/en/develop/home.html [3]Coral Dev Board官方开发资料 https://www.coral.ai/docs/dev-board/get-started [4]Nvidia Jetson Nano官方开发资料 https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#setup [5]算丰边缘计算开发板官方开发资料 https://sophon-edge.gitbook.io/project/overview/edge-tpu-developer-board [6] HiHope Hikey 970官方开发资料 https://www.96boards.org/documentation/consumer/hikey/hikey970/ [7] Atlas 200 DK官方开发资料 https://www.huaweicloud.com/ascend/doc/atlas200dk/1.32.0.0(beta)/zh/zh-cn_topic_0204328966.html [8]人工智能芯片与传统芯片的区别 https://blog.csdn.net/zhangbijun1230/article/details/80717351 [9]基于大数据及云计算的语音识别及其深度学习平台 http://www.cbdio.com/BigData/2015-04/08/content_2802203.htm","permalink":"http://mingg2333.top/2020/06/02/EDB/","photos":[]},{"tags":[{"name":"c","slug":"c","permalink":"http://mingg2333.top/tags/c/"}],"title":"简单复数计算器设计","date":"2020/05/25","text":"介绍近期的一项微机原理课程设计——电子计算器。 [TOC] 1 功能简介 1 1 计算器模式 1 2 其他附加模式 2 电路设计 3 主要程序详解 3 1 程序框架 3 2 system control 3 2 1 系统模式管理 3 2 2 输入输出处理 3 3 calculator 3 n 细节处理 4 想法与总结 1 功能简介本系统为电子计算器，非计算时可以显示时间且时间可以调整，还可以滚动显示随机的乘法表算式。系统功能概括为4种模式，模式间可以相互切换。 1 1 计算器模式支持加、减、乘、除、开方运算； 支持带括号的混合运算； 支持小数、复数运算； 实时显示运算结果或者异常信息； 输出精度到0.001,大小不超过31位（二进制）； 支持计算溢出、表达式错误、除以零等异常提醒； 支持运算结果的存储与查看； 支持负数不加括号、括号前不加乘号等输入习惯。 1 2 其他附加模式显示时间模式 显示日期与时间，支持月份末自动调整、闰年校正。 调整时间模式 支持设置年、月、日、时、分、秒的每一位； 保存上次时间设置。 滚动显示随机乘法表算式模式 滚动显示随机的乘法表算式。 2 电路设计基于proteus单片机单片机仿真软件,电路原理图如下, 下表简单介绍一下元器件, 模块 元器件 备注 MCU AT89C51 含有片内振荡器，没有特殊要求时可以不接外部晶振 8位排阻 用于51单片机P0端口的上拉 LCD模块 LM016L 基于液晶内置的HD44780芯片控制 按键模块 4×4矩阵按键 独立按键 时钟模块 DS1302 一般需要32.768KHz标准时钟晶振 晶振 32.768KHz 存储模块 6264 8KB的RAM 74LS373 用于地址线低八位的锁存 LED模块 LED灯 红色 电阻 330Ω,用于限流 注：实际电路中，考虑电源波动的影响一般需要在元器件电源处并联电容。 3 主要程序详解3 1 程序框架 系统初始化包括液晶lm016(等同于lcd1602)、时钟芯片ds1302、单片机定时器等的初始化. system control相关程序负责管理系统的模式状态、进行输入输出的处理. lm016、ds1302、key、calculator代表不同模块,分别是显示、读取时钟、输入、计算的实现或者说驱动. 3 2 system control3 2 1 系统模式管理//系统状态枚举typedef enum{ TimesDisplay = 0, //时间显示 CalculationInput , //计算器 MultiplicationTable , //滚动乘法表 TimesChange //调整时间 } SystemStatus;extern SystemStatus system_status;//系统状态extern SystemStatus system_laststatus;//上次系统状态 定义枚举类型enum来表示不同的系统状态,而模式切换通过条件判断语句if即可实现(省略部分代码在后面介绍), if (system_status &lt;= CalculationInput &amp;&amp; ch == 'o')//显示时间与计算器模式间的切换 { ch = 0; system_status ^= CalculationInput;//设置状态 //……设置屏幕 }else if (system_status &lt;= CalculationInput &amp;&amp; ch == 'O')//进入模拟滚动 { ch = 0; system_laststatus = system_status; system_status = MultiplicationTable;//设置状态 //……设置屏幕 }//其他的模式切换放在下面的状态处理中switch (system_status)//状态判断与处理 { case CalculationInput: //……key_lcd_calc_connect break; case TimesChange: //……key_lcd_ds_connect break; case TimesDisplay: //……ds_lcd_connect break; case MultiplicationTable: //……multab_lcd_connect break; default: //restart break; } 3 2 2 输入输出处理通过条件判断语句switch实现不同状态下的输入输出的管理. 上一块代码的switch语句中的key_lcd_calc_connect key_lcd_ds_connect ds_lcd_connect multab_lcd_connect就是对输入输出的中间处理,它们把多个模块间进行连接(有的”connect”中融入了模式切换). 以key_lcd_calc_connect 为例,它的输入输出处理框图如下, 从key输入的”数据”分两条路径到达输出侧lm016l，一条是输入经过system control调用calculator的数据格式整理后到输出，一条是输入与过去输入累积经过system control调用calculator的求解算法后到输出； 从key输入的”命令”经过system control调用calculator执行命令. 相关代码如下: if ((ch &gt;= '0' &amp;&amp; ch &lt;= '9') || prority(ch) &gt;= 0)//输入数字0-9或者运算符{ if (cursor &gt;= CalcOverflow)//alarm: input overflow { ch = 0; } else { //……输入直接到输出的格式整理 //……输入累积(存储) SimpleCalc();//数学求解 pos(cursor);//设置光标 delay(2); }}else if (panic_instruct(ch))//输入命令{ CalcOpera();//执行命令 pos(cursor);//设置光标 delay(2);} 3 3 calculator下面介绍calculator模块的实现. (未完待续) 3 n 细节处理4 想法与总结状态切换 system control中状态切换","permalink":"http://mingg2333.top/2020/05/25/wjsj/","photos":[]},{"tags":[{"name":"qbasic","slug":"qbasic","permalink":"http://mingg2333.top/tags/qbasic/"}],"title":"感应电机电磁设计计算机核算程序实验","date":"2020/05/01","text":"本文介绍QBASIC运行环境的搭建，以及电机核算程序的修改、运行与error处理。 qbasic 简介 运行环境搭建 电机核算程序 qbasic c qbasic简介BASIC语言原本是方便大学生学习计算机创造的高级语言，Quick BASIC、QBASIC、Visual Basic等都是从BASIC发展而来的，或者说是BASIC的变种，QBASIC在语法与功能上与其他两者相近，稍有不同的是它是一种解释型的语言。 运行环境搭建参考QBasic: Compiler, Interpreter, Software download, Articles…,使用仿真器的方法,比较便捷: 2.1 在当前Windows上需要借助DOS模拟器,请先下载模拟器比如DOSBox,下载后请自行安装,记住DOSBox安装目录; 2.2 下载DOS仿真器Basic 2 DOSBox(点击即下载),得到压缩包BASIC2DOSBox.zip,解压得同名文件夹; 2.3 安装DOS仿真器,参考BASIC2DOSBox\\docs\\README.pdf, ? 运行BASIC2DOSBox\\basic2dos.exe,界面如图, ? ? (1)第一个空白框里选择DOSBox安装目录下的DOSBox.exe,即填写DOSBox.exe的全路径, ? (2)第二个空白框里选择DOS仿真器将要安装存放的目录, ? (3)Installation选项卡里选择将要安装的BASIC版本,这里仅选择了QBASIC 1.1, ? (4)Options选项卡里选择安装配置, ? Shut down DOSBox when exiting指退出QBASIC 1.1后自动退出DOSBox.exe, ? Full Screen Mode指打开QBASIC 1.1后全屏(全屏后Alt + Tab可切换界面), ? Copy Example Files指在DOS仿真器安装目录下_source\\EXAMPLES提供例程, ? (5)点击Next进入下一步,之后很快安装完成,点击Yes退出; 2.4 运行DOS仿真器,找到并运行DOS仿真器安装目录下_shorcut\\qb11快捷方式,界面如图, ? ? 界面包括菜单栏、提示框、快捷键提醒等,这里强调两个快捷键：Esc,相当于返回,几乎在任何提示框都可以使用;F5,在程序界面运行程序,下面即将介绍; 2.5 按Esc退出提示框,开始编辑程序,按F5运行,效果如下图(在菜单栏Option-Display中可以设置背景颜色); CLS : PRINT \"HELLO WORLD!\" 2.6 在菜单栏File中存取文件,以存文件为例,点击File-Save,如图, 选择D盘,它代表DOS仿真器安装目录下的_source文件夹(取文件也是在预先把文件放在_source里,打开_shorcut\\qb11后在D盘读取),点击OK;重命名后点击OK即保存; 2.7 一种退出qb11的方法:File-Exit. 电机核算程序qbasic本实验根据陈世坤老师主编的《电机设计》一书，源程序来自书P300-304,根据DOS仿真器提示与课程知识,程序修改为, 点击展开QBASIC程序(165行) 10 : CLS : LET SPCLEN = 8'RAD'rad20 : READ PN, P, X, C, A, DW, D, G, DK, L, Z, BK, HK, B, R, H30 : READ N, U, V, W, Y, ZZ, DR, SR, PW40 : DATA 55, 2, 3, 1, 4, 400, 260, .8, 85, 240, 48, 4, 1, 8, 5.7, 26.550 : DATA 36, 3, 0, 1.3, 0, 44, 184.2, 14, 110060 : IF X = 1 THEN READ BU, BL, HH70 : IF X &gt; 1 THEN READ BU, BV, BL, HG, HH80 : IF DW &gt; 270 THEN LET M = 11'READ M 'no value?90 : DATA 3.5, 7, 3, 14, 28100 : PRINT PN; SPC(SPCLEN + 2); P; SPC(SPCLEN + 4); X; SPC(SPCLEN + 1); C; SPC(SPCLEN + 4); A; SPC(SPCLEN + 3); M110 : IF DW &lt;= 270 THEN PRINT \"IGNORE THE LAST 1\"120 : PRINT DW; SPC(SPCLEN); D; SPC(SPCLEN + 2); G; SPC(SPCLEN + 1); DK; SPC(SPCLEN + 2); L; SPC(SPCLEN + 2); Z130 : PRINT BK; SPC(SPCLEN + 3); HK; SPC(SPCLEN + 4); B; SPC(SPCLEN + 1); R; SPC(SPCLE + 8); H; SPC(SPCLEN + 2); N140 : PRINT U; SPC(SPCLEN + 3); V; SPC(SPCLEN + 2); W; SPC(SPCLEN + 1); Y; SPC(SPCLEN + 3); DR; SPC(SPCLEN); SR150 : IF X = 1 THEN PRINT ZZ; SPC(SPCLEN); BU; SPC(SPCLEN); BL; SPC(SPCLEN); HH160 : IF X &gt; 1 THEN PRINT ZZ; SPC(SPCLEN + 1); BU; SPC(SPCLEN + 3); BV; SPC(SPCLEN + 1); BL; SPC(SPCLEN + 3); HG; SPC(SPCLEN + 3); HH170 : J = PN / 1.14 * SQR(C): LET PI = 3.1415926#'calcu1180 : LD = 25: IF DW &lt; 390 THEN LET LD = 20: IF DW &lt; 270 THEN LET LD = 15: IF DW &lt; 125 THEN LET LD = 10190 : TY = PI / 2 / P * (D + 2 * HK + 2 + H + R)'PI=3.1415926...200 : BB = 1: IF DW &gt; 270 THEN LET BB = 2 * M * P / Z210 : BC = PI / Z * (D + 2 * HK + (B - BK) / SQR(3)) - B220 : BD = PI / Z * (D + 2 * HK + 2 * H) - 2 * R230 : IF X = 1 THEN LET BE = PI / ZZ * (D - 2 * G - 1 - (BU - 1) / SQR(3)) - BU: BF = PI / ZZ * (D - 2 * G - 1 - 2 * HH) - BL'zhuanzichi240 : IF X = 2 THEN LET BE = PI / ZZ * (D - 2 * G - 2 * HG) - BU250 : IF X = 3 THEN LET BE = PI / ZZ * (D - 2 * G - 1.6 - 2 * HG) - BU260 : IF X &gt; 1 THEN LET BF = PI / ZZ * (D - 2 * G - 2 * HG - 4 / 3 * HH) - (2 * BL + BV) / 3270 : IF DW &lt;= 270 GOTO 310280 : M = (B + 2 * R) / (B + 2 * R + BC + BD) 'DW&gt;270290 : CS = TY * BB / 2 / SQR(1 - M * M)300 : LS = 2 * (LD + CS): GOTO 340 'DW&gt;270 END LD=25 RIGHT CS SHOULD=124310 : LS = 2 * LD + TY'zhuanzichi end 'DW&lt;270320 : IF P = 1 THEN LET LS = 2 * LD + 2.9 / 3 * TY330 : IF P &gt; 3 THEN LET LS = 2 * LD + 25 / 24 * TY 'DW&lt;270 END340 : LZ = L + LS: ZF = N * Z / 3 / A 'L=240350 : E = .25: IF DW &gt; 200 THEN LET E = .3: IF DW &gt; 280 THEN LET E = .35360 : KW = .08: IF W &lt; 1 THEN LET KW = .06370 : K = (H - 2) * (B / 2 + R) + PI / 2 * R * R - E * (2 * H + B + PI * R)380 : IF DW &gt; 270 THEN LET K = K - E * (B + 2 * R) 'differ390 : K = (U * (W + KW) * (W + KW) + V * (Y + KW) * (Y + KW)) * N / K * 100400 : SC = PI / 4 * (U * W * W + V * Y * Y)410 : U = ZF * LZ / A / 46000! / SC: V = U * J / 380 / SQR(C)'differ420 : W = .0000095 * Z * N * LZ * SC'calcu1 end430 : PRINT LD; SPC(SPCLEN); LZ; USING \"##.###\"; SPC(SPCLEN - 3); U; SPC(SPCLEN); W; SPC(SPCLEN); K440 : '450 : Q = Z / 6 / P: XB = Z / 2 / P * (1 - BB)'calcu2460 : IF Q - INT(Q) THEN LET Q = 2 * Q: IF Q - INT(Q) THEN LET Q = 2 * Q470 : KQ = .5 / Q / SIN(PI / 6 / Q): E = SIN(BB * PI / 2): KW = KQ * E480 : Q = Z / 6 / P: S = PI * PI / 54 / Q / Q * ((5 * Q * Q + 1) + XB / 4 / Q * (XB * XB - 1) - 3 * XB * XB / 2) - KW * KW490 : K = 3 * ZF * ZF * KW * KW500 : IF X = 1 THEN LET SB = (BU * BU - 1) / 4 / SQR(3) + (BU + BL) / 2 * (HH - (BU - 1) / 2 / SQR(3))510 : IF X = 2 THEN LET SD = (BV + BL) / 2 * HH: SB = (BU + 1.5) / 2 * HG + SD520 : IF X = 3 THEN LET SD = (BV + BL) / 2 * HH: SB = (BU * BU - 2.25) / 4 / SQR(3) + BU * (HG - (BU - 1.5) / 2 / SQR(3)) + SD 'differ530 : Y = 1.19E-07 * K * L / SB / ZZ * J * SQR(C)540 : KK = 1.821E-10 * K * DR / P / P / SR * J * SQR(C)'differ550 : K = Y + KK: LE = L + 2 * G: U = PI * D / Z: W = PI * (D - 2 * G) / ZZ 'differ560 : CX = 1 + BK * BK / (U * (4.4 * G + .75 * BK) - BK * BK)570 : E = 1 + .5 * INT(X / 2): E = 1 + E * E / (W * (4.4 * G + .75 * E) - E * E): GE = CX * E * G580 : CX = 4.5533E-10 * PN * LE * ZF * ZF * KW * KW * C / P'differ590 : Q = 1.5 / PI * D / P / GE * CX600 : RS = PI * PI / 3 * P * P / ZZ / ZZ * (1 + ZZ * ZZ / Z / Z / 2)610 : KU = (3 * BB + 1) / 4: KL = (9 * BB + 7) / 16620 : LB = HK / BK + (B - BK) / SQR(3) / (B + BK)630 : LC = (H - C * B - BK / SQR(3) / 2) / 3 / B + .135 / SQR(B / 2 / R)'differ640 : LA = KU * LB + KL * LC650 : XA = 6 * P * L * LA / LE / KW / KW / Z * CX660 : XC = (1.2 * LD + .6 * CS * M) / LE * CX670 : IF DW &lt;= 270 THEN LET XC = .47 * (LS - 1.6 / 3 * TY) / LE / KW / KW * CX680 : IF X = 1 THEN LET LD = .5 + (BU - 1) / (SQR(3) * BU + 1) + (HH - (BU - 1) / SQR(3) / 2) / 3 / BL / (BU + BL) ^ (16 / 15): GOTO 790'differ690 : IF X = 3 GOTO 750700 : U = BU / 1.5: T = BL / BV'X &lt;&gt; 3710 : KP = .009 + .324 * U + .053 * (U - 1) * (U - 1)720 : KR = .5 + (U / (1 - U)) ^ 2 * (1 / U - LOG(1 / U) - 1): KS = U / (1 - U) * LOG(1 / U)730 : KT = .009 + .324 * T + .053 * (T - 1) * (T - 1)740 : LD = (1.5 * HG ^ 3 * KP + SD * HG * HG * KR + SD * SD * HG / BU * KS + BV * HH ^ 3 * KT) / SB / SB: GOTO 790'X &lt;&gt; 3 end750 : U = HG - (BU - 1.5) / 2 / SQR(3): T = BL / BV'X = 3760 : KT = .009 + .324 * T + .053 * (T - 1) * (T - 1)770 : LD = .8 / 1.5 + (BU - 1.5) / SQR(3) / (BU + 1.5)780 : LD = LD + (BU * U ^ 3 / 3 + SD * U * U + SD * SD * U / BU + BV * HH ^ 3 * KT) / SB / SB'X = 3 end790 : XD = 6 * P * L * LD / LE / ZZ * CX'differ800 : XF = .3785 / LE * DR / P * CX'differ810 : SG = PI * D / 2 / P * LE: SZ = .2375 * (BC + BD) * L * Z / P: SY = .95 * (DW - D - 2 * (HK + H) - 4 / 3 * R) * L820 : M = 1: IF P = 1 THEN LET M = 1 / 3830 : IF X = 1 THEN LET SX = .15833 * (BE + 2 * BF) * L * ZZ / P: SJ = .95 * (D - 1 - 2 * G - M * DK - 2 * HH) * L840 : IF X &gt; 1 THEN LET SW = .475 * BE * L * ZZ / P: SX = .475 * BF * L * ZZ / P850 : IF X &gt; 1 THEN LET SJ = .95 * (D - 2 * G - M * DK - 2 * HG - 2 * HH) * L: IF X = 3 THEN LET SJ = SJ - 1.52 * L860 : IF DW &gt; 280 THEN LET SZ = SZ * 92 / 95: SY = SY * 92 / 95: SX = SX * 92 / 95: SJ = SJ * 92 / 95: SW = SW * 92 / 95870 : T = PI / 4 / P * (DW - SY / 1.9 / L): IF DW &gt; 280 THEN LET T = PI / 4 / P * (DW - SY / 1.84 / L)'homework880 : L = PI / 4 / P * (M * DK + SJ / 1.9 / L): IF DW &gt; 280 THEN LET L = PI / 4 / P * (M * DK + SJ / 1.84 / L)890 : LS = 2 * P * SZ * (H + R / 3): LZ = 2 * P * SY * T900 : PW = PW / PN / 1000!910 : PS = (3 - P / 2) / 100: IF P &gt; 3 THEN LET PS = .015920 : DK = .931 + .011 * LOG(PN) - .013 * P: IF P = 1 THEN LET DK = .92 + .00866 * LOG(PN)'calcu2 end P=2 LN？？？930 : F = DK * 3.8E+08 / SQR(C) / 111 / ZF / KW: M = 1.46'总磁通量 F:每极磁通 M:波幅系数假设值940 : BG = M * F / SG: AG = 800 * BG * GE'气隙及齿磁路 BG:气隙磁密 AG:及所需磁势950 : BZ = M * F / SZ: AZ = .3472 * BZ / (1.754 - BZ) * (H + R / 3)'齿960 : IF X = 1 THEN LET BX = M * F / SX: AX = .3472 * BX / (1.754 - BX) * HH'齿下部970 : IF X &gt; 1 THEN LET BW = M * F / SW: BX = M * F / SX: AX = .3472 * (BW / (1.754 - BW) * HG + BX / (1.754 - BX) * HH)'气隙及齿磁路 end980 : E = 1 + (AZ + AX) / AG: W = 1.971 - .4 * E'波幅系数比较990 : IF E &gt; 1.25 THEN LET W = W + .42 * (E - 1.25) ^ 21000 : IF ABS(W - M) &lt; .0005 GOTO 10201010 : M = W - (W - M) / 3: GOTO 940'波幅系数 end1020 : BY = F / SY: AY = .3472 * BY / (1.754 - BY) * T * (1.1 - .5 * BY)'总磁化电流与漏抗1030 : BJ = F / SJ: AJ = .3472 * BJ / (1.754 - BJ) * L * (1.1 - .5 * BJ)1040 : JM = 1.48 * (AG + AZ + AX + AY + AJ) * P / ZF / KW / J'总磁化电流与漏抗 end1050 : XB = Q * S / KW / KW / E: XE = Q * RS / E'有功 无功电流 损耗1060 : XS = XA + XB + XC: XR = XD + XE + XF: XX = XS + XR1070 : E = 1 + JM * XS1080 : BE = (2 - E) / DK * BZ: BF = .00005 * (BE - .7) * LS1090 : BC = (2 - E) / DK * BY: BD = .00005 * (BC - .7) * LZ1100 : PF = (2.5 * BF + 2 * BD) / PN / 1000!1110 : M = 1 / E / XX: F = M * (V + K) + 2 * JM * V1120 : BB = 1 + PF + PW + PS + JM * JM * V: M = (M - 2 * F * BB) / 2: F = 1 + F * F1130 : JX = (M - SQR(M * M - F * BB * BB)) / F: JR = JX + JM1140 : JP = SQR((1 / E / XX - JX) * JX)'有功 无功电流 损耗 end1150 : DW = 1 - JP * V - JR * XS '电压（电势）系数比较1160 : IF ABS(DW - DK) &lt; .0005 GOTO 11801170 : DK = DW - (DW - DK) / 8: GOTO 930'电压系数 end1180 : PRINT USING \"##.###\"; BG; SPC(SPCLEN - 2); BZ; SPC(SPCLEN); BY; SPC(SPCLEN); BW; SPC(SPCLEN + 1); BX; SPC(SPCLEN); BJ '运行性能1190 : IF X = 1 THEN PRINT \"REPLACE THE LAST 3:\"; SPC(SPCLEN); BX; SPC(SPCLEN); BJ1200 : PC = (JP * JP + JR * JR) * V: PA = (JP * JP + JX * JX) * K1210 : JC = SQR(JP * JP + JR * JR): JN = SQR(3 / C) * JC * J1220 : S = 30 * ZF * JC * J / PI / D: DW = JC * J / A / SC: DK = S * DW1230 : '1240 : DR = 3 * SQR(JP * JP + JX * JX) * J * ZF * KW / ZZ / SB '导条电流密度1250 : SR = DR * SB * ZZ / PI / 2 / P / SR / 100 '段环电流密度1260 : PRINT USING \"####.##\"; JN; SPC(SPCLEN - 3); S; SPC(SPCLEN - 2); DW; SPC(SPCLEN + 1); DK; SPC(SPCLEN - 2); DR; SPC(SPCLEN - 2); SR1270 : C = 1 / JC * JP1280 : S = PA / (1 + PA + PF + PS + PW - (BD + BF) / PN / 1000!)1290 : PRINT USING \"#####.#\"; PC * PN * 1000!; SPC(SPCLEN - 4); PA * PN * 1000!; SPC(SPCLEN); PF * PN * 1000!; SPC(SPCLEN - 1); PW * PN * 1000!; SPC(SPCLEN); PS * PN * 1000!; SPC(SPCLEN - 3); 100 / JP1300 : 'PRINT USING \"###.##\" PC(JX JM V) PA(JX K) PF(BF BD) WRONG; JP(JX E XX) LW; PW PS(P) RIGHT1310 : T = (1 - S) / 2 / (V + SQR(V * V + XX * XX))1320 : PRINT USING \"##.###\"; XS * 100; SPC(SPCLEN - 1); XR * 100; SPC(SPCLEN); XX * 100; SPC(SPCLEN); C * 100; SPC(SPCLEN); S * 100; SPC(SPCLEN); T1330 : 'PRINT '运行性能 end1340 : U = PI * D / Z: W = PI * (D - 2 * G) / ZZ'启动性能数据 启动电流1350 : M = .707 * SQR(2 - E) * N / A * (KU + KW * KQ * Z / ZZ) / (.64 + 2.5 * SQR(G / (U + W))) / .16 / G1360 : Q = (HK + (B - BK) / 6) / BK1370 : IF X = 1 GOTO 15001380 : BB = 1 - .06 * (BV / BU - 1) + .012 * (BV / BU - 1) * (BV / BU - 1)'x = 2, 31390 : B = BB / .0675: A = 1.5 * B1400 : DR = BL + (BV - BL) * (HG + HH - B) / HH: RS = B - HG1410 : R = V + SB / (SB - SD + (DR + BV) / 2 * RS) * Y + KK1420 : DR = BL + (BV - BL) * (HG + HH - A) / HH: RS = A - HG: SB = SB - SD + (DR + BV) / 2 * RS1430 : IF X = 3 GOTO 14601440 : H = DR / BV: KT = .009 + .324 * H + .053 * (H - 1) * (H - 1): SD = (BV + DR) / 2 * RS'x=21450 : LE = (1.5 * HG ^ 3 * KP + SD * HG * HG * HR + SD * SD * HG / BU * KS + BV * RS ^ 3 * KT) / SB / SB: GOTO 1520'x=21460 : A = HG - (BU - 1.5) / 2 / SQR(3): H = DR / BV'x=31470 : KT = .009 + .324 * H + .053 * (H - 1) * (H - 1): SD = (BV + DR) / 2 * RS'x=31480 : LE = (BU - 1.5) / SQR(3) / (BU + 1.5) + (BU * A ^ 3 / 3 + SD * A * A + SD * SD * A / BU + BV * RS ^ 3 * KT) / SB / SB'x=31490 : GOTO 1520'x&lt;&gt;1 end1500 : H = .0675 * HH: R = V + (1 + .4 * (H - .5) ^ 2 / SQR(BU / BL)) * Y + KK' x=11510 : LE = (LD - .5) * (1 - .11 * (H - .5) * (H - .5) / (BU / BL) ^ .16)'x=11520 : P = 2.7 * T * J'启动性能数据 启动电流 end1530 : K = .234 / (M * P / 100000!) ^ .86: IF K &lt; .85 THEN LET K = .85'启动性能1540 : CS = (U - BK) * (1 - K): C = (W - 1) * (1 - K): IF X &gt; 1 THEN LET C = (W - 1.5) * (1 - K)1550 : L = KU * (LB - Q * (CS / (CS + 1.5 * BK))) + KL * LC1560 : D = L / LA * XA: H = K * XB: XS = D + H + XC1570 : N = LE + .5 / (C + 1): IF X &gt; 1 THEN LET N = LE + 1.5 / .8 / (C + 1.5): IF X = 2 THEN LET N = LE1580 : F = N / LD * XD: G = K * XE: XR = F + G + XF: XX = XS + XR1590 : Z = SQR(R * R + XX * XX): B = J / Z'启动性能 end1600 : IF ABS((B - P) / B) &lt; .001 GOTO 1630'启动电流比较1610 : IF K = .85 GOTO 16301620 : P = B + (B - P) / 8: GOTO 1530'启动电流比较 end1630 : T = (R - V) / Z / Z * (1 - S)1640 : PRINT USING \"##.###\"; XS * 100; SPC(SPCLEN - 1); XR * 100; SPC(SPCLEN); XX * 100; SPC(SPCLEN); 1 / JC / Z; SPC(SPCLEN); T1650 : PRINT \"END\" 程序运行结果如图, 结果与书上一致. c解决错误： C语言语法问题：1.int/int 2.sqrs(-)[^注释]","permalink":"http://mingg2333.top/2020/05/01/djsj/","photos":[]},{"tags":[{"name":"hello","slug":"hello","permalink":"http://mingg2333.top/tags/hello/"}],"title":"test2","date":"2020/04/22","text":"test222 标题 二级 三级 四级 五级 标题二级三级四级五级my plan2.数学（物理）简史 计划3.我搭建个人网站的参考4.AD，打印PCB流程5.FPGA6.SIT介绍6.1 CSR6.2 灰度定面积7.计算机等级相关8.MATLAB相关9.课设10.人工智能模块11.VB12.主页：日历时间13.ACM14.英语学习15.UG16.嵌入式：单片机：51、32（怎么下载keil包）、怎么找mps430资料（C盘ti）17、竞赛18.语言19.个人“简”介20.小米笔记里的21.小班课PPT作为博文22.电机设计等程序及其学习","permalink":"http://mingg2333.top/2020/04/22/test2/","photos":[]},{"tags":[{"name":"cubic function","slug":"cubic-function","permalink":"http://mingg2333.top/tags/cubic-function/"}],"title":"三次函数的极点水平线处性质","date":"2020/04/21","text":"高二时完成的理论推导。","permalink":"http://mingg2333.top/2020/04/21/cubic_function_property/","photos":[]},{"tags":[{"name":"hello","slug":"hello","permalink":"http://mingg2333.top/tags/hello/"}],"title":"hello","date":"2020/04/21","text":"awsl","permalink":"http://mingg2333.top/2020/04/21/hello/","photos":[]},{"tags":[{"name":"hello","slug":"hello","permalink":"http://mingg2333.top/tags/hello/"}],"title":"Hello World","date":"2020/04/21","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","permalink":"http://mingg2333.top/2020/04/21/hello-world/","photos":[]}],"categories":[],"tags":[{"name":"Apollo","slug":"Apollo","permalink":"http://mingg2333.top/tags/Apollo/"},{"name":"simulation","slug":"simulation","permalink":"http://mingg2333.top/tags/simulation/"},{"name":"AI","slug":"AI","permalink":"http://mingg2333.top/tags/AI/"},{"name":"experiment","slug":"experiment","permalink":"http://mingg2333.top/tags/experiment/"},{"name":"methodology","slug":"methodology","permalink":"http://mingg2333.top/tags/methodology/"},{"name":"Docker","slug":"Docker","permalink":"http://mingg2333.top/tags/Docker/"},{"name":"machine learning","slug":"machine-learning","permalink":"http://mingg2333.top/tags/machine-learning/"},{"name":"test case evaluation","slug":"test-case-evaluation","permalink":"http://mingg2333.top/tags/test-case-evaluation/"},{"name":"programming language","slug":"programming-language","permalink":"http://mingg2333.top/tags/programming-language/"},{"name":"C","slug":"C","permalink":"http://mingg2333.top/tags/C/"},{"name":"Java","slug":"Java","permalink":"http://mingg2333.top/tags/Java/"},{"name":"CAN","slug":"CAN","permalink":"http://mingg2333.top/tags/CAN/"},{"name":"bus","slug":"bus","permalink":"http://mingg2333.top/tags/bus/"},{"name":"Python","slug":"Python","permalink":"http://mingg2333.top/tags/Python/"},{"name":"deep learning","slug":"deep-learning","permalink":"http://mingg2333.top/tags/deep-learning/"},{"name":"Colab","slug":"Colab","permalink":"http://mingg2333.top/tags/Colab/"},{"name":"Jupyter","slug":"Jupyter","permalink":"http://mingg2333.top/tags/Jupyter/"},{"name":"multi-device","slug":"multi-device","permalink":"http://mingg2333.top/tags/multi-device/"},{"name":"adversarial examples","slug":"adversarial-examples","permalink":"http://mingg2333.top/tags/adversarial-examples/"},{"name":"paradigm","slug":"paradigm","permalink":"http://mingg2333.top/tags/paradigm/"},{"name":"software","slug":"software","permalink":"http://mingg2333.top/tags/software/"},{"name":"afl","slug":"afl","permalink":"http://mingg2333.top/tags/afl/"},{"name":"tool","slug":"tool","permalink":"http://mingg2333.top/tags/tool/"},{"name":"Zotero","slug":"Zotero","permalink":"http://mingg2333.top/tags/Zotero/"},{"name":"bibliography management","slug":"bibliography-management","permalink":"http://mingg2333.top/tags/bibliography-management/"},{"name":"Perl","slug":"Perl","permalink":"http://mingg2333.top/tags/Perl/"},{"name":"ubuntu","slug":"ubuntu","permalink":"http://mingg2333.top/tags/ubuntu/"},{"name":"new machine","slug":"new-machine","permalink":"http://mingg2333.top/tags/new-machine/"},{"name":"Windows","slug":"Windows","permalink":"http://mingg2333.top/tags/Windows/"},{"name":"git","slug":"git","permalink":"http://mingg2333.top/tags/git/"},{"name":"VS code","slug":"VS-code","permalink":"http://mingg2333.top/tags/VS-code/"},{"name":"markdown","slug":"markdown","permalink":"http://mingg2333.top/tags/markdown/"},{"name":"PC","slug":"PC","permalink":"http://mingg2333.top/tags/PC/"},{"name":"encoding","slug":"encoding","permalink":"http://mingg2333.top/tags/encoding/"},{"name":"unicode","slug":"unicode","permalink":"http://mingg2333.top/tags/unicode/"},{"name":"utf-8","slug":"utf-8","permalink":"http://mingg2333.top/tags/utf-8/"},{"name":"CS入门","slug":"CS入门","permalink":"http://mingg2333.top/tags/CS%E5%85%A5%E9%97%A8/"},{"name":"csapp","slug":"csapp","permalink":"http://mingg2333.top/tags/csapp/"},{"name":"算法","slug":"算法","permalink":"http://mingg2333.top/tags/%E7%AE%97%E6%B3%95/"},{"name":"tensorflow","slug":"tensorflow","permalink":"http://mingg2333.top/tags/tensorflow/"},{"name":"软件安装","slug":"软件安装","permalink":"http://mingg2333.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"},{"name":"python","slug":"python","permalink":"http://mingg2333.top/tags/python/"},{"name":"图像处理","slug":"图像处理","permalink":"http://mingg2333.top/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"字符画","slug":"字符画","permalink":"http://mingg2333.top/tags/%E5%AD%97%E7%AC%A6%E7%94%BB/"},{"name":"IC","slug":"IC","permalink":"http://mingg2333.top/tags/IC/"},{"name":"边缘计算","slug":"边缘计算","permalink":"http://mingg2333.top/tags/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/"},{"name":"c","slug":"c","permalink":"http://mingg2333.top/tags/c/"},{"name":"qbasic","slug":"qbasic","permalink":"http://mingg2333.top/tags/qbasic/"},{"name":"hello","slug":"hello","permalink":"http://mingg2333.top/tags/hello/"},{"name":"cubic function","slug":"cubic-function","permalink":"http://mingg2333.top/tags/cubic-function/"}]}